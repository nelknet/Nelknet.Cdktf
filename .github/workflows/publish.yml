name: Publish NuGet Packages

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Package version (defaults to tag name without leading v)"
        required: false
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      NUGET_XMLDOC_MODE: skip
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install npm dependencies
        run: npm ci
      - name: Scaffold provider projects
        run: dotnet fsi tools/scaffold-providers.fsx
      - name: Bootstrap providers
        run: dotnet run --project tools/Nelknet.Cdktf.Bootstrap/Nelknet.Cdktf.Bootstrap.fsproj
      - name: Determine version
        id: version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            version="${{ github.event.inputs.version }}"
          else
            ref_name="${GITHUB_REF_NAME:-${GITHUB_REF##*/}}"
            version="${ref_name#v}"
          fi
          if [ -z "$version" ]; then
            echo "Version could not be determined" >&2
            exit 1
          fi
          echo "value=$version" >> "$GITHUB_OUTPUT"
      - name: Build (Release)
        run: dotnet build -c Release -p:ForceCodeGen=true
      - name: Pack packages
        run: |
          version='${{ steps.version.outputs.value }}'
          dotnet pack src/Core/Nelknet.Cdktf.Core/Nelknet.Cdktf.Core.fsproj -c Release -o artifacts /p:PackageVersion=$version
          dotnet pack src/Providers/Aws/Nelknet.Cdktf.Providers.Aws.fsproj -c Release -o artifacts /p:PackageVersion=$version
          dotnet pack src/Providers/Hcloud/Nelknet.Cdktf.Providers.Hcloud.fsproj -c Release -o artifacts /p:PackageVersion=$version
          dotnet pack src/Providers/Random/Nelknet.Cdktf.Providers.Random.fsproj -c Release -o artifacts /p:PackageVersion=$version
          dotnet pack src/Providers/Azurerm/Nelknet.Cdktf.Providers.Azurerm.fsproj -c Release -o artifacts /p:PackageVersion=$version
      - name: Push to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          if [ -z "$NUGET_API_KEY" ]; then
            echo "NUGET_API_KEY secret is missing" >&2
            exit 1
          fi
          dotnet nuget push "artifacts/**/*.nupkg" --api-key "$NUGET_API_KEY" --source https://api.nuget.org/v3/index.json --skip-duplicate
      - name: Upload packaged artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: artifacts/**/*.nupkg
