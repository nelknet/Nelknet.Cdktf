namespace Nelknet.Cdktf.Providers
open System
open System.Collections.Generic
open HashiCorp.Cdktf
open Nelknet.Cdktf
open Nelknet.Cdktf.Internal
type GuarddutyMalwareProtectionPlanState<'Role> = { assignments: ResizeArray<aws.GuarddutyMalwareProtectionPlan.GuarddutyMalwareProtectionPlanConfig -> unit> }
    /// <summary>
    /// Represents a <a href="https://registry.terraform.io/providers/hashicorp/aws/5.100.0/docs/resources/guardduty_malware_protection_plan">aws_guardduty_malware_protection_plan</a>.
    /// </summary>
    type GuarddutyMalwareProtectionPlanBuilder(logicalId: string) =
        member _.Yield(_: unit) : GuarddutyMalwareProtectionPlanState<Missing> =
            ({ assignments = ResizeArray() } : GuarddutyMalwareProtectionPlanState<Missing>)

        member _.Zero(()) : GuarddutyMalwareProtectionPlanState<Missing> =
            ({ assignments = ResizeArray() } : GuarddutyMalwareProtectionPlanState<Missing>)

        /// <summary>
        /// Docs at Terraform Registry: <a href="https://registry.terraform.io/providers/hashicorp/aws/5.100.0/docs/resources/guardduty_malware_protection_plan#role-1">GuarddutyMalwareProtectionPlan#role</a>.
        /// </summary>
        [<CustomOperation "role">]
        member _.Role(state: GuarddutyMalwareProtectionPlanState<Missing>, value: string) : GuarddutyMalwareProtectionPlanState<Present> =
            state.assignments.Add(fun config -> config.Role <- value)
            ({ assignments = state.assignments } : GuarddutyMalwareProtectionPlanState<Present>)

        /// <summary>
        /// Docs at Terraform Registry: <a href="https://registry.terraform.io/providers/hashicorp/aws/5.100.0/docs/resources/guardduty_malware_protection_plan#actions-1">GuarddutyMalwareProtectionPlan#actions</a>. Accepts: aws.IResolvable | aws.GuarddutyMalwareProtectionPlan.GuarddutyMalwareProtectionPlanActions[]
        /// </summary>
        [<CustomOperation "actions">]
        member _.Actions(state: GuarddutyMalwareProtectionPlanState<'Role>, value: HashiCorp.Cdktf.IResolvable) : GuarddutyMalwareProtectionPlanState<'Role> =
            state.assignments.Add(fun config -> config.Actions <- value)
            state : GuarddutyMalwareProtectionPlanState<'Role>

        /// <summary>
        /// protected_resource block. Docs at Terraform Registry: <a href="https://registry.terraform.io/providers/hashicorp/aws/5.100.0/docs/resources/guardduty_malware_protection_plan#protected_resource-1">GuarddutyMalwareProtectionPlan#protected_resource</a> Accepts: aws.IResolvable | aws.GuarddutyMalwareProtectionPlan.GuarddutyMalwareProtectionPlanProtectedResource[]
        /// </summary>
        [<CustomOperation "protected_resource">]
        member _.ProtectedResource(state: GuarddutyMalwareProtectionPlanState<'Role>, value: HashiCorp.Cdktf.IResolvable) : GuarddutyMalwareProtectionPlanState<'Role> =
            state.assignments.Add(fun config -> config.ProtectedResource <- value)
            state : GuarddutyMalwareProtectionPlanState<'Role>

        /// <summary>
        /// Docs at Terraform Registry: <a href="https://registry.terraform.io/providers/hashicorp/aws/5.100.0/docs/resources/guardduty_malware_protection_plan#tags-1">GuarddutyMalwareProtectionPlan#tags</a>.
        /// </summary>
        [<CustomOperation "tags">]
        member _.Tags(state: GuarddutyMalwareProtectionPlanState<'Role>, value: seq<string * string>) : GuarddutyMalwareProtectionPlanState<'Role> =
            state.assignments.Add(fun config -> config.Tags <- dict value)
            state : GuarddutyMalwareProtectionPlanState<'Role>

        member _.Run(state: GuarddutyMalwareProtectionPlanState<Present>) : aws.GuarddutyMalwareProtectionPlan.GuarddutyMalwareProtectionPlan =
            let config = aws.GuarddutyMalwareProtectionPlan.GuarddutyMalwareProtectionPlanConfig()
            for setter in state.assignments do
                setter config
            aws.GuarddutyMalwareProtectionPlan.GuarddutyMalwareProtectionPlan(StackContext.get (), logicalId, config)

        [<CompilerMessage("Aws.guarddutyMalwareProtectionPlan: missing required arguments. Must call: role.", 9999, IsError = true)>]
        member _.Run(_: GuarddutyMalwareProtectionPlanState<_>) : aws.GuarddutyMalwareProtectionPlan.GuarddutyMalwareProtectionPlan =
            Unchecked.defaultof<aws.GuarddutyMalwareProtectionPlan.GuarddutyMalwareProtectionPlan>
