namespace Nelknet.Cdktf.Providers

open Nelknet.Cdktf

module Hcloud =
    let certificate logicalId = CertificateBuilder(logicalId)
    let dataHcloudCertificate logicalId = DataHcloudCertificateBuilder(logicalId)
    let dataHcloudCertificates logicalId = DataHcloudCertificatesBuilder(logicalId)
    let dataHcloudDatacenter logicalId = DataHcloudDatacenterBuilder(logicalId)
    let dataHcloudDatacenters logicalId = DataHcloudDatacentersBuilder(logicalId)
    let dataHcloudFirewall logicalId = DataHcloudFirewallBuilder(logicalId)
    let dataHcloudFirewalls logicalId = DataHcloudFirewallsBuilder(logicalId)
    let dataHcloudFloatingIp logicalId = DataHcloudFloatingIpBuilder(logicalId)
    let dataHcloudFloatingIps logicalId = DataHcloudFloatingIpsBuilder(logicalId)
    let dataHcloudImage logicalId = DataHcloudImageBuilder(logicalId)
    let dataHcloudImages logicalId = DataHcloudImagesBuilder(logicalId)
    let dataHcloudLoadBalancer logicalId = DataHcloudLoadBalancerBuilder(logicalId)
    let dataHcloudLoadBalancerType logicalId = DataHcloudLoadBalancerTypeBuilder(logicalId)
    let dataHcloudLoadBalancerTypes logicalId = DataHcloudLoadBalancerTypesBuilder(logicalId)
    let dataHcloudLoadBalancers logicalId = DataHcloudLoadBalancersBuilder(logicalId)
    let dataHcloudLocation logicalId = DataHcloudLocationBuilder(logicalId)
    let dataHcloudLocations logicalId = DataHcloudLocationsBuilder(logicalId)
    let dataHcloudNetwork logicalId = DataHcloudNetworkBuilder(logicalId)
    let dataHcloudNetworks logicalId = DataHcloudNetworksBuilder(logicalId)
    let dataHcloudPlacementGroup logicalId = DataHcloudPlacementGroupBuilder(logicalId)
    let dataHcloudPlacementGroups logicalId = DataHcloudPlacementGroupsBuilder(logicalId)
    let dataHcloudPrimaryIp logicalId = DataHcloudPrimaryIpBuilder(logicalId)
    let dataHcloudPrimaryIps logicalId = DataHcloudPrimaryIpsBuilder(logicalId)
    let dataHcloudServer logicalId = DataHcloudServerBuilder(logicalId)
    let dataHcloudServerType logicalId = DataHcloudServerTypeBuilder(logicalId)
    let dataHcloudServerTypes logicalId = DataHcloudServerTypesBuilder(logicalId)
    let dataHcloudServers logicalId = DataHcloudServersBuilder(logicalId)
    let dataHcloudSshKey logicalId = DataHcloudSshKeyBuilder(logicalId)
    let dataHcloudSshKeys logicalId = DataHcloudSshKeysBuilder(logicalId)
    let dataHcloudVolume logicalId = DataHcloudVolumeBuilder(logicalId)
    let dataHcloudVolumes logicalId = DataHcloudVolumesBuilder(logicalId)
    let dataHcloudZone logicalId = DataHcloudZoneBuilder(logicalId)
    let dataHcloudZoneRrset logicalId = DataHcloudZoneRrsetBuilder(logicalId)
    let dataHcloudZoneRrsets logicalId = DataHcloudZoneRrsetsBuilder(logicalId)
    let dataHcloudZones logicalId = DataHcloudZonesBuilder(logicalId)
    let firewall logicalId = FirewallBuilder(logicalId)
    let firewallAttachment logicalId = FirewallAttachmentBuilder(logicalId)
    let floatingIp logicalId = FloatingIpBuilder(logicalId)
    let floatingIpAssignment logicalId = FloatingIpAssignmentBuilder(logicalId)
    let loadBalancer logicalId = LoadBalancerBuilder(logicalId)
    let loadBalancerNetwork logicalId = LoadBalancerNetworkBuilder(logicalId)
    let loadBalancerService logicalId = LoadBalancerServiceBuilder(logicalId)
    let loadBalancerTargetA logicalId = LoadBalancerTargetABuilder(logicalId)
    let managedCertificate logicalId = ManagedCertificateBuilder(logicalId)
    let network logicalId = NetworkBuilder(logicalId)
    let networkRoute logicalId = NetworkRouteBuilder(logicalId)
    let networkSubnet logicalId = NetworkSubnetBuilder(logicalId)
    let placementGroup logicalId = PlacementGroupBuilder(logicalId)
    let primaryIp logicalId = PrimaryIpBuilder(logicalId)
    let provider logicalId = HcloudProviderBuilder(logicalId)
    let rdns logicalId = RdnsBuilder(logicalId)
    let server logicalId = ServerBuilder(logicalId)
    let serverNetworkA logicalId = ServerNetworkABuilder(logicalId)
    let snapshot logicalId = SnapshotBuilder(logicalId)
    let sshKey logicalId = SshKeyBuilder(logicalId)
    let uploadedCertificate logicalId = UploadedCertificateBuilder(logicalId)
    let volume logicalId = VolumeBuilder(logicalId)
    let volumeAttachment logicalId = VolumeAttachmentBuilder(logicalId)
    let zone logicalId = ZoneBuilder(logicalId)
    let zoneRrset logicalId = ZoneRrsetBuilder(logicalId)
