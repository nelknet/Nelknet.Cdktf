namespace Nelknet.Cdktf.Providers
open System
open System.Collections.Generic
open HashiCorp.Cdktf
open Nelknet.Cdktf
open Nelknet.Cdktf.Internal
type SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, 'RuleName, 'SqlPoolVulnerabilityAssessmentId> = { assignments: ResizeArray<azurerm.SynapseSqlPoolVulnerabilityAssessmentBaseline.SynapseSqlPoolVulnerabilityAssessmentBaselineConfig -> unit> }
    /// <summary>
    /// Represents a <a href="https://registry.terraform.io/providers/hashicorp/azurerm/4.1.0/docs/resources/synapse_sql_pool_vulnerability_assessment_baseline">azurerm_synapse_sql_pool_vulnerability_assessment_baseline</a>.
    /// </summary>
    type SynapseSqlPoolVulnerabilityAssessmentBaselineBuilder(logicalId: string) =
        member _.Yield(_: unit) : SynapseSqlPoolVulnerabilityAssessmentBaselineState<Missing, Missing, Missing> =
            ({ assignments = ResizeArray() } : SynapseSqlPoolVulnerabilityAssessmentBaselineState<Missing, Missing, Missing>)

        member _.Zero(()) : SynapseSqlPoolVulnerabilityAssessmentBaselineState<Missing, Missing, Missing> =
            ({ assignments = ResizeArray() } : SynapseSqlPoolVulnerabilityAssessmentBaselineState<Missing, Missing, Missing>)

        /// <summary>
        /// Docs at Terraform Registry: <a href="https://registry.terraform.io/providers/hashicorp/azurerm/4.1.0/docs/resources/synapse_sql_pool_vulnerability_assessment_baseline#name-1">SynapseSqlPoolVulnerabilityAssessmentBaseline#name</a>.
        /// </summary>
        [<CustomOperation "name">]
        member _.Name(state: SynapseSqlPoolVulnerabilityAssessmentBaselineState<Missing, 'RuleName, 'SqlPoolVulnerabilityAssessmentId>, value: string) : SynapseSqlPoolVulnerabilityAssessmentBaselineState<Present, 'RuleName, 'SqlPoolVulnerabilityAssessmentId> =
            state.assignments.Add(fun config -> config.Name <- value)
            ({ assignments = state.assignments } : SynapseSqlPoolVulnerabilityAssessmentBaselineState<Present, 'RuleName, 'SqlPoolVulnerabilityAssessmentId>)

        /// <summary>
        /// Docs at Terraform Registry: <a href="https://registry.terraform.io/providers/hashicorp/azurerm/4.1.0/docs/resources/synapse_sql_pool_vulnerability_assessment_baseline#rule_name-1">SynapseSqlPoolVulnerabilityAssessmentBaseline#rule_name</a>.
        /// </summary>
        [<CustomOperation "rule_name">]
        member _.RuleName(state: SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, Missing, 'SqlPoolVulnerabilityAssessmentId>, value: string) : SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, Present, 'SqlPoolVulnerabilityAssessmentId> =
            state.assignments.Add(fun config -> config.RuleName <- value)
            ({ assignments = state.assignments } : SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, Present, 'SqlPoolVulnerabilityAssessmentId>)

        /// <summary>
        /// Docs at Terraform Registry: <a href="https://registry.terraform.io/providers/hashicorp/azurerm/4.1.0/docs/resources/synapse_sql_pool_vulnerability_assessment_baseline#sql_pool_vulnerability_assessment_id-1">SynapseSqlPoolVulnerabilityAssessmentBaseline#sql_pool_vulnerability_assessment_id</a>.
        /// </summary>
        [<CustomOperation "sql_pool_vulnerability_assessment_id">]
        member _.SqlPoolVulnerabilityAssessmentId(state: SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, 'RuleName, Missing>, value: string) : SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, 'RuleName, Present> =
            state.assignments.Add(fun config -> config.SqlPoolVulnerabilityAssessmentId <- value)
            ({ assignments = state.assignments } : SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, 'RuleName, Present>)

        /// <summary>
        /// baseline block. Docs at Terraform Registry: <a href="https://registry.terraform.io/providers/hashicorp/azurerm/4.1.0/docs/resources/synapse_sql_pool_vulnerability_assessment_baseline#baseline-1">SynapseSqlPoolVulnerabilityAssessmentBaseline#baseline</a> Accepts: azurerm.IResolvable | azurerm.SynapseSqlPoolVulnerabilityAssessmentBaseline.SynapseSqlPoolVulnerabilityAssessmentBaselineBaseline[]
        /// </summary>
        [<CustomOperation "baseline">]
        member _.Baseline(state: SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, 'RuleName, 'SqlPoolVulnerabilityAssessmentId>, value: HashiCorp.Cdktf.IResolvable) : SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, 'RuleName, 'SqlPoolVulnerabilityAssessmentId> =
            state.assignments.Add(fun config -> config.Baseline <- value)
            state : SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, 'RuleName, 'SqlPoolVulnerabilityAssessmentId>

        /// <summary>
        /// Docs at Terraform Registry: <a href="https://registry.terraform.io/providers/hashicorp/azurerm/4.1.0/docs/resources/synapse_sql_pool_vulnerability_assessment_baseline#id-1">SynapseSqlPoolVulnerabilityAssessmentBaseline#id</a>. Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2. If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
        /// </summary>
        [<CustomOperation "id">]
        member _.Id(state: SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, 'RuleName, 'SqlPoolVulnerabilityAssessmentId>, value: string) : SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, 'RuleName, 'SqlPoolVulnerabilityAssessmentId> =
            state.assignments.Add(fun config -> config.Id <- value)
            state : SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, 'RuleName, 'SqlPoolVulnerabilityAssessmentId>

        /// <summary>
        /// timeouts block. Docs at Terraform Registry: <a href="https://registry.terraform.io/providers/hashicorp/azurerm/4.1.0/docs/resources/synapse_sql_pool_vulnerability_assessment_baseline#timeouts-1">SynapseSqlPoolVulnerabilityAssessmentBaseline#timeouts</a>
        /// </summary>
        [<CustomOperation "timeouts">]
        member _.Timeouts(state: SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, 'RuleName, 'SqlPoolVulnerabilityAssessmentId>, value: azurerm.SynapseSqlPoolVulnerabilityAssessmentBaseline.SynapseSqlPoolVulnerabilityAssessmentBaselineTimeouts) : SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, 'RuleName, 'SqlPoolVulnerabilityAssessmentId> =
            state.assignments.Add(fun config -> config.Timeouts <- value)
            state : SynapseSqlPoolVulnerabilityAssessmentBaselineState<'Name, 'RuleName, 'SqlPoolVulnerabilityAssessmentId>

        member _.Run(state: SynapseSqlPoolVulnerabilityAssessmentBaselineState<Present, Present, Present>) : azurerm.SynapseSqlPoolVulnerabilityAssessmentBaseline.SynapseSqlPoolVulnerabilityAssessmentBaseline =
            let config = azurerm.SynapseSqlPoolVulnerabilityAssessmentBaseline.SynapseSqlPoolVulnerabilityAssessmentBaselineConfig()
            for setter in state.assignments do
                setter config
            azurerm.SynapseSqlPoolVulnerabilityAssessmentBaseline.SynapseSqlPoolVulnerabilityAssessmentBaseline(StackContext.get (), logicalId, config)

        [<CompilerMessage("Azurerm.synapseSqlPoolVulnerabilityAssessmentBaseline: missing required arguments. Must call: name, rule_name, sql_pool_vulnerability_assessment_id.", 9999, IsError = true)>]
        member _.Run(_: SynapseSqlPoolVulnerabilityAssessmentBaselineState<_, _, _>) : azurerm.SynapseSqlPoolVulnerabilityAssessmentBaseline.SynapseSqlPoolVulnerabilityAssessmentBaseline =
            Unchecked.defaultof<azurerm.SynapseSqlPoolVulnerabilityAssessmentBaseline.SynapseSqlPoolVulnerabilityAssessmentBaseline>
