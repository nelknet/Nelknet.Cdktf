namespace Nelknet.Cdktf.Providers

open Nelknet.Cdktf

module Azurerm =
    let aadb2CDirectory logicalId = Aadb2CDirectoryBuilder(logicalId)
    let activeDirectoryDomainService logicalId = ActiveDirectoryDomainServiceBuilder(logicalId)
    let activeDirectoryDomainServiceReplicaSet logicalId = ActiveDirectoryDomainServiceReplicaSetBuilder(logicalId)
    let activeDirectoryDomainServiceTrust logicalId = ActiveDirectoryDomainServiceTrustBuilder(logicalId)
    let advancedThreatProtection logicalId = AdvancedThreatProtectionBuilder(logicalId)
    let aiServices logicalId = AiServicesBuilder(logicalId)
    let analysisServicesServer logicalId = AnalysisServicesServerBuilder(logicalId)
    let apiConnection logicalId = ApiConnectionBuilder(logicalId)
    let apiManagement logicalId = ApiManagementBuilder(logicalId)
    let apiManagementApi logicalId = ApiManagementApiBuilder(logicalId)
    let apiManagementApiDiagnostic logicalId = ApiManagementApiDiagnosticBuilder(logicalId)
    let apiManagementApiOperation logicalId = ApiManagementApiOperationBuilder(logicalId)
    let apiManagementApiOperationPolicy logicalId = ApiManagementApiOperationPolicyBuilder(logicalId)
    let apiManagementApiOperationTag logicalId = ApiManagementApiOperationTagBuilder(logicalId)
    let apiManagementApiPolicy logicalId = ApiManagementApiPolicyBuilder(logicalId)
    let apiManagementApiRelease logicalId = ApiManagementApiReleaseBuilder(logicalId)
    let apiManagementApiSchema logicalId = ApiManagementApiSchemaBuilder(logicalId)
    let apiManagementApiTag logicalId = ApiManagementApiTagBuilder(logicalId)
    let apiManagementApiTagDescription logicalId = ApiManagementApiTagDescriptionBuilder(logicalId)
    let apiManagementApiVersionSet logicalId = ApiManagementApiVersionSetBuilder(logicalId)
    let apiManagementAuthorizationServer logicalId = ApiManagementAuthorizationServerBuilder(logicalId)
    let apiManagementBackend logicalId = ApiManagementBackendBuilder(logicalId)
    let apiManagementCertificateA logicalId = ApiManagementCertificateABuilder(logicalId)
    let apiManagementCustomDomain logicalId = ApiManagementCustomDomainBuilder(logicalId)
    let apiManagementDiagnostic logicalId = ApiManagementDiagnosticBuilder(logicalId)
    let apiManagementEmailTemplate logicalId = ApiManagementEmailTemplateBuilder(logicalId)
    let apiManagementGateway logicalId = ApiManagementGatewayBuilder(logicalId)
    let apiManagementGatewayApi logicalId = ApiManagementGatewayApiBuilder(logicalId)
    let apiManagementGatewayCertificateAuthority logicalId = ApiManagementGatewayCertificateAuthorityBuilder(logicalId)
    let apiManagementGatewayHostNameConfiguration logicalId = ApiManagementGatewayHostNameConfigurationBuilder(logicalId)
    let apiManagementGlobalSchema logicalId = ApiManagementGlobalSchemaBuilder(logicalId)
    let apiManagementGroup logicalId = ApiManagementGroupBuilder(logicalId)
    let apiManagementGroupUser logicalId = ApiManagementGroupUserBuilder(logicalId)
    let apiManagementIdentityProviderAad logicalId = ApiManagementIdentityProviderAadBuilder(logicalId)
    let apiManagementIdentityProviderAadb2C logicalId = ApiManagementIdentityProviderAadb2CBuilder(logicalId)
    let apiManagementIdentityProviderFacebook logicalId = ApiManagementIdentityProviderFacebookBuilder(logicalId)
    let apiManagementIdentityProviderGoogle logicalId = ApiManagementIdentityProviderGoogleBuilder(logicalId)
    let apiManagementIdentityProviderMicrosoft logicalId = ApiManagementIdentityProviderMicrosoftBuilder(logicalId)
    let apiManagementIdentityProviderTwitter logicalId = ApiManagementIdentityProviderTwitterBuilder(logicalId)
    let apiManagementLogger logicalId = ApiManagementLoggerBuilder(logicalId)
    let apiManagementNamedValue logicalId = ApiManagementNamedValueBuilder(logicalId)
    let apiManagementNotificationRecipientEmail logicalId = ApiManagementNotificationRecipientEmailBuilder(logicalId)
    let apiManagementNotificationRecipientUser logicalId = ApiManagementNotificationRecipientUserBuilder(logicalId)
    let apiManagementOpenidConnectProvider logicalId = ApiManagementOpenidConnectProviderBuilder(logicalId)
    let apiManagementPolicy logicalId = ApiManagementPolicyBuilder(logicalId)
    let apiManagementPolicyFragment logicalId = ApiManagementPolicyFragmentBuilder(logicalId)
    let apiManagementProduct logicalId = ApiManagementProductBuilder(logicalId)
    let apiManagementProductApi logicalId = ApiManagementProductApiBuilder(logicalId)
    let apiManagementProductGroup logicalId = ApiManagementProductGroupBuilder(logicalId)
    let apiManagementProductPolicy logicalId = ApiManagementProductPolicyBuilder(logicalId)
    let apiManagementProductTag logicalId = ApiManagementProductTagBuilder(logicalId)
    let apiManagementRedisCache logicalId = ApiManagementRedisCacheBuilder(logicalId)
    let apiManagementSubscription logicalId = ApiManagementSubscriptionBuilder(logicalId)
    let apiManagementTag logicalId = ApiManagementTagBuilder(logicalId)
    let apiManagementUser logicalId = ApiManagementUserBuilder(logicalId)
    let appConfiguration logicalId = AppConfigurationBuilder(logicalId)
    let appConfigurationFeature logicalId = AppConfigurationFeatureBuilder(logicalId)
    let appConfigurationKey logicalId = AppConfigurationKeyBuilder(logicalId)
    let appService logicalId = AppServiceBuilder(logicalId)
    let appServiceActiveSlot logicalId = AppServiceActiveSlotBuilder(logicalId)
    let appServiceCertificate logicalId = AppServiceCertificateBuilder(logicalId)
    let appServiceCertificateBinding logicalId = AppServiceCertificateBindingBuilder(logicalId)
    let appServiceCertificateOrder logicalId = AppServiceCertificateOrderBuilder(logicalId)
    let appServiceConnection logicalId = AppServiceConnectionBuilder(logicalId)
    let appServiceCustomHostnameBinding logicalId = AppServiceCustomHostnameBindingBuilder(logicalId)
    let appServiceEnvironmentV3 logicalId = AppServiceEnvironmentV3Builder(logicalId)
    let appServiceHybridConnection logicalId = AppServiceHybridConnectionBuilder(logicalId)
    let appServiceManagedCertificate logicalId = AppServiceManagedCertificateBuilder(logicalId)
    let appServicePlan logicalId = AppServicePlanBuilder(logicalId)
    let appServicePublicCertificate logicalId = AppServicePublicCertificateBuilder(logicalId)
    let appServiceSlot logicalId = AppServiceSlotBuilder(logicalId)
    let appServiceSlotCustomHostnameBinding logicalId = AppServiceSlotCustomHostnameBindingBuilder(logicalId)
    let appServiceSlotVirtualNetworkSwiftConnection logicalId = AppServiceSlotVirtualNetworkSwiftConnectionBuilder(logicalId)
    let appServiceSourceControlA logicalId = AppServiceSourceControlABuilder(logicalId)
    let appServiceSourceControlSlot logicalId = AppServiceSourceControlSlotBuilder(logicalId)
    let appServiceSourceControlToken logicalId = AppServiceSourceControlTokenBuilder(logicalId)
    let appServiceVirtualNetworkSwiftConnection logicalId = AppServiceVirtualNetworkSwiftConnectionBuilder(logicalId)
    let applicationGateway logicalId = ApplicationGatewayBuilder(logicalId)
    let applicationInsights logicalId = ApplicationInsightsBuilder(logicalId)
    let applicationInsightsAnalyticsItem logicalId = ApplicationInsightsAnalyticsItemBuilder(logicalId)
    let applicationInsightsApiKey logicalId = ApplicationInsightsApiKeyBuilder(logicalId)
    let applicationInsightsSmartDetectionRule logicalId = ApplicationInsightsSmartDetectionRuleBuilder(logicalId)
    let applicationInsightsStandardWebTest logicalId = ApplicationInsightsStandardWebTestBuilder(logicalId)
    let applicationInsightsWebTest logicalId = ApplicationInsightsWebTestBuilder(logicalId)
    let applicationInsightsWorkbook logicalId = ApplicationInsightsWorkbookBuilder(logicalId)
    let applicationInsightsWorkbookTemplate logicalId = ApplicationInsightsWorkbookTemplateBuilder(logicalId)
    let applicationLoadBalancer logicalId = ApplicationLoadBalancerBuilder(logicalId)
    let applicationLoadBalancerFrontend logicalId = ApplicationLoadBalancerFrontendBuilder(logicalId)
    let applicationLoadBalancerSubnetAssociation logicalId = ApplicationLoadBalancerSubnetAssociationBuilder(logicalId)
    let applicationSecurityGroup logicalId = ApplicationSecurityGroupBuilder(logicalId)
    let arcKubernetesCluster logicalId = ArcKubernetesClusterBuilder(logicalId)
    let arcKubernetesClusterExtension logicalId = ArcKubernetesClusterExtensionBuilder(logicalId)
    let arcKubernetesFluxConfiguration logicalId = ArcKubernetesFluxConfigurationBuilder(logicalId)
    let arcMachineExtension logicalId = ArcMachineExtensionBuilder(logicalId)
    let arcPrivateLinkScope logicalId = ArcPrivateLinkScopeBuilder(logicalId)
    let arcResourceBridgeAppliance logicalId = ArcResourceBridgeApplianceBuilder(logicalId)
    let attestationProvider logicalId = AttestationProviderBuilder(logicalId)
    let automanageConfiguration logicalId = AutomanageConfigurationBuilder(logicalId)
    let automationAccount logicalId = AutomationAccountBuilder(logicalId)
    let automationCertificate logicalId = AutomationCertificateBuilder(logicalId)
    let automationConnection logicalId = AutomationConnectionBuilder(logicalId)
    let automationConnectionCertificate logicalId = AutomationConnectionCertificateBuilder(logicalId)
    let automationConnectionClassicCertificate logicalId = AutomationConnectionClassicCertificateBuilder(logicalId)
    let automationConnectionServicePrincipal logicalId = AutomationConnectionServicePrincipalBuilder(logicalId)
    let automationConnectionType logicalId = AutomationConnectionTypeBuilder(logicalId)
    let automationCredential logicalId = AutomationCredentialBuilder(logicalId)
    let automationDscConfiguration logicalId = AutomationDscConfigurationBuilder(logicalId)
    let automationDscNodeconfiguration logicalId = AutomationDscNodeconfigurationBuilder(logicalId)
    let automationHybridRunbookWorker logicalId = AutomationHybridRunbookWorkerBuilder(logicalId)
    let automationHybridRunbookWorkerGroup logicalId = AutomationHybridRunbookWorkerGroupBuilder(logicalId)
    let automationJobSchedule logicalId = AutomationJobScheduleBuilder(logicalId)
    let automationModule logicalId = AutomationModuleBuilder(logicalId)
    let automationPowershell72Module logicalId = AutomationPowershell72ModuleBuilder(logicalId)
    let automationPython3Package logicalId = AutomationPython3PackageBuilder(logicalId)
    let automationRunbook logicalId = AutomationRunbookBuilder(logicalId)
    let automationSchedule logicalId = AutomationScheduleBuilder(logicalId)
    let automationSoftwareUpdateConfiguration logicalId = AutomationSoftwareUpdateConfigurationBuilder(logicalId)
    let automationSourceControl logicalId = AutomationSourceControlBuilder(logicalId)
    let automationVariableBool logicalId = AutomationVariableBoolBuilder(logicalId)
    let automationVariableDatetime logicalId = AutomationVariableDatetimeBuilder(logicalId)
    let automationVariableInt logicalId = AutomationVariableIntBuilder(logicalId)
    let automationVariableObject logicalId = AutomationVariableObjectBuilder(logicalId)
    let automationVariableString logicalId = AutomationVariableStringBuilder(logicalId)
    let automationWatcher logicalId = AutomationWatcherBuilder(logicalId)
    let automationWebhook logicalId = AutomationWebhookBuilder(logicalId)
    let availabilitySet logicalId = AvailabilitySetBuilder(logicalId)
    let backupContainerStorageAccount logicalId = BackupContainerStorageAccountBuilder(logicalId)
    let backupPolicyFileShare logicalId = BackupPolicyFileShareBuilder(logicalId)
    let backupPolicyVm logicalId = BackupPolicyVmBuilder(logicalId)
    let backupPolicyVmWorkload logicalId = BackupPolicyVmWorkloadBuilder(logicalId)
    let backupProtectedFileShare logicalId = BackupProtectedFileShareBuilder(logicalId)
    let backupProtectedVm logicalId = BackupProtectedVmBuilder(logicalId)
    let bastionHost logicalId = BastionHostBuilder(logicalId)
    let batchAccount logicalId = BatchAccountBuilder(logicalId)
    let batchApplication logicalId = BatchApplicationBuilder(logicalId)
    let batchCertificate logicalId = BatchCertificateBuilder(logicalId)
    let batchJob logicalId = BatchJobBuilder(logicalId)
    let batchPool logicalId = BatchPoolBuilder(logicalId)
    let billingAccountCostManagementExport logicalId = BillingAccountCostManagementExportBuilder(logicalId)
    let blueprintAssignment logicalId = BlueprintAssignmentBuilder(logicalId)
    let botChannelAlexa logicalId = BotChannelAlexaBuilder(logicalId)
    let botChannelDirectLineSpeech logicalId = BotChannelDirectLineSpeechBuilder(logicalId)
    let botChannelDirectline logicalId = BotChannelDirectlineBuilder(logicalId)
    let botChannelEmail logicalId = BotChannelEmailBuilder(logicalId)
    let botChannelFacebook logicalId = BotChannelFacebookBuilder(logicalId)
    let botChannelLine logicalId = BotChannelLineBuilder(logicalId)
    let botChannelMsTeams logicalId = BotChannelMsTeamsBuilder(logicalId)
    let botChannelSlack logicalId = BotChannelSlackBuilder(logicalId)
    let botChannelSms logicalId = BotChannelSmsBuilder(logicalId)
    let botChannelWebChat logicalId = BotChannelWebChatBuilder(logicalId)
    let botChannelsRegistration logicalId = BotChannelsRegistrationBuilder(logicalId)
    let botConnection logicalId = BotConnectionBuilder(logicalId)
    let botServiceAzureBot logicalId = BotServiceAzureBotBuilder(logicalId)
    let botWebApp logicalId = BotWebAppBuilder(logicalId)
    let capacityReservation logicalId = CapacityReservationBuilder(logicalId)
    let capacityReservationGroup logicalId = CapacityReservationGroupBuilder(logicalId)
    let cdnEndpoint logicalId = CdnEndpointBuilder(logicalId)
    let cdnEndpointCustomDomain logicalId = CdnEndpointCustomDomainBuilder(logicalId)
    let cdnFrontdoorCustomDomain logicalId = CdnFrontdoorCustomDomainBuilder(logicalId)
    let cdnFrontdoorCustomDomainAssociation logicalId = CdnFrontdoorCustomDomainAssociationBuilder(logicalId)
    let cdnFrontdoorEndpoint logicalId = CdnFrontdoorEndpointBuilder(logicalId)
    let cdnFrontdoorFirewallPolicy logicalId = CdnFrontdoorFirewallPolicyBuilder(logicalId)
    let cdnFrontdoorOrigin logicalId = CdnFrontdoorOriginBuilder(logicalId)
    let cdnFrontdoorOriginGroup logicalId = CdnFrontdoorOriginGroupBuilder(logicalId)
    let cdnFrontdoorProfile logicalId = CdnFrontdoorProfileBuilder(logicalId)
    let cdnFrontdoorRoute logicalId = CdnFrontdoorRouteBuilder(logicalId)
    let cdnFrontdoorRule logicalId = CdnFrontdoorRuleBuilder(logicalId)
    let cdnFrontdoorRuleSet logicalId = CdnFrontdoorRuleSetBuilder(logicalId)
    let cdnFrontdoorSecret logicalId = CdnFrontdoorSecretBuilder(logicalId)
    let cdnFrontdoorSecurityPolicy logicalId = CdnFrontdoorSecurityPolicyBuilder(logicalId)
    let cdnProfile logicalId = CdnProfileBuilder(logicalId)
    let chaosStudioCapability logicalId = ChaosStudioCapabilityBuilder(logicalId)
    let chaosStudioExperiment logicalId = ChaosStudioExperimentBuilder(logicalId)
    let chaosStudioTarget logicalId = ChaosStudioTargetBuilder(logicalId)
    let cognitiveAccount logicalId = CognitiveAccountBuilder(logicalId)
    let cognitiveAccountCustomerManagedKeyA logicalId = CognitiveAccountCustomerManagedKeyABuilder(logicalId)
    let cognitiveDeployment logicalId = CognitiveDeploymentBuilder(logicalId)
    let communicationService logicalId = CommunicationServiceBuilder(logicalId)
    let communicationServiceEmailDomainAssociation logicalId = CommunicationServiceEmailDomainAssociationBuilder(logicalId)
    let confidentialLedger logicalId = ConfidentialLedgerBuilder(logicalId)
    let consumptionBudgetManagementGroup logicalId = ConsumptionBudgetManagementGroupBuilder(logicalId)
    let consumptionBudgetResourceGroup logicalId = ConsumptionBudgetResourceGroupBuilder(logicalId)
    let consumptionBudgetSubscription logicalId = ConsumptionBudgetSubscriptionBuilder(logicalId)
    let containerApp logicalId = ContainerAppBuilder(logicalId)
    let containerAppCustomDomain logicalId = ContainerAppCustomDomainBuilder(logicalId)
    let containerAppEnvironment logicalId = ContainerAppEnvironmentBuilder(logicalId)
    let containerAppEnvironmentCertificate logicalId = ContainerAppEnvironmentCertificateBuilder(logicalId)
    let containerAppEnvironmentCustomDomain logicalId = ContainerAppEnvironmentCustomDomainBuilder(logicalId)
    let containerAppEnvironmentDaprComponent logicalId = ContainerAppEnvironmentDaprComponentBuilder(logicalId)
    let containerAppEnvironmentStorage logicalId = ContainerAppEnvironmentStorageBuilder(logicalId)
    let containerAppJob logicalId = ContainerAppJobBuilder(logicalId)
    let containerConnectedRegistry logicalId = ContainerConnectedRegistryBuilder(logicalId)
    let containerGroup logicalId = ContainerGroupBuilder(logicalId)
    let containerRegistry logicalId = ContainerRegistryBuilder(logicalId)
    let containerRegistryAgentPool logicalId = ContainerRegistryAgentPoolBuilder(logicalId)
    let containerRegistryCacheRule logicalId = ContainerRegistryCacheRuleBuilder(logicalId)
    let containerRegistryScopeMap logicalId = ContainerRegistryScopeMapBuilder(logicalId)
    let containerRegistryTask logicalId = ContainerRegistryTaskBuilder(logicalId)
    let containerRegistryTaskScheduleRunNow logicalId = ContainerRegistryTaskScheduleRunNowBuilder(logicalId)
    let containerRegistryToken logicalId = ContainerRegistryTokenBuilder(logicalId)
    let containerRegistryTokenPassword logicalId = ContainerRegistryTokenPasswordBuilder(logicalId)
    let containerRegistryWebhook logicalId = ContainerRegistryWebhookBuilder(logicalId)
    let cosmosdbAccount logicalId = CosmosdbAccountBuilder(logicalId)
    let cosmosdbCassandraCluster logicalId = CosmosdbCassandraClusterBuilder(logicalId)
    let cosmosdbCassandraDatacenter logicalId = CosmosdbCassandraDatacenterBuilder(logicalId)
    let cosmosdbCassandraKeyspace logicalId = CosmosdbCassandraKeyspaceBuilder(logicalId)
    let cosmosdbCassandraTable logicalId = CosmosdbCassandraTableBuilder(logicalId)
    let cosmosdbGremlinDatabase logicalId = CosmosdbGremlinDatabaseBuilder(logicalId)
    let cosmosdbGremlinGraph logicalId = CosmosdbGremlinGraphBuilder(logicalId)
    let cosmosdbMongoCollection logicalId = CosmosdbMongoCollectionBuilder(logicalId)
    let cosmosdbMongoDatabase logicalId = CosmosdbMongoDatabaseBuilder(logicalId)
    let cosmosdbMongoRoleDefinition logicalId = CosmosdbMongoRoleDefinitionBuilder(logicalId)
    let cosmosdbMongoUserDefinition logicalId = CosmosdbMongoUserDefinitionBuilder(logicalId)
    let cosmosdbPostgresqlCluster logicalId = CosmosdbPostgresqlClusterBuilder(logicalId)
    let cosmosdbPostgresqlCoordinatorConfiguration logicalId = CosmosdbPostgresqlCoordinatorConfigurationBuilder(logicalId)
    let cosmosdbPostgresqlFirewallRule logicalId = CosmosdbPostgresqlFirewallRuleBuilder(logicalId)
    let cosmosdbPostgresqlNodeConfiguration logicalId = CosmosdbPostgresqlNodeConfigurationBuilder(logicalId)
    let cosmosdbPostgresqlRole logicalId = CosmosdbPostgresqlRoleBuilder(logicalId)
    let cosmosdbSqlContainer logicalId = CosmosdbSqlContainerBuilder(logicalId)
    let cosmosdbSqlDatabase logicalId = CosmosdbSqlDatabaseBuilder(logicalId)
    let cosmosdbSqlDedicatedGateway logicalId = CosmosdbSqlDedicatedGatewayBuilder(logicalId)
    let cosmosdbSqlFunction logicalId = CosmosdbSqlFunctionBuilder(logicalId)
    let cosmosdbSqlRoleAssignment logicalId = CosmosdbSqlRoleAssignmentBuilder(logicalId)
    let cosmosdbSqlRoleDefinition logicalId = CosmosdbSqlRoleDefinitionBuilder(logicalId)
    let cosmosdbSqlStoredProcedure logicalId = CosmosdbSqlStoredProcedureBuilder(logicalId)
    let cosmosdbSqlTrigger logicalId = CosmosdbSqlTriggerBuilder(logicalId)
    let cosmosdbTable logicalId = CosmosdbTableBuilder(logicalId)
    let costAnomalyAlert logicalId = CostAnomalyAlertBuilder(logicalId)
    let costManagementScheduledAction logicalId = CostManagementScheduledActionBuilder(logicalId)
    let customIpPrefix logicalId = CustomIpPrefixBuilder(logicalId)
    let customProvider logicalId = CustomProviderBuilder(logicalId)
    let dashboardGrafana logicalId = DashboardGrafanaBuilder(logicalId)
    let dataAzurermAadb2CDirectory logicalId = DataAzurermAadb2CDirectoryBuilder(logicalId)
    let dataAzurermActiveDirectoryDomainService logicalId = DataAzurermActiveDirectoryDomainServiceBuilder(logicalId)
    let dataAzurermAdvisorRecommendations logicalId = DataAzurermAdvisorRecommendationsBuilder(logicalId)
    let dataAzurermApiManagement logicalId = DataAzurermApiManagementBuilder(logicalId)
    let dataAzurermApiManagementApi logicalId = DataAzurermApiManagementApiBuilder(logicalId)
    let dataAzurermApiManagementApiVersionSet logicalId = DataAzurermApiManagementApiVersionSetBuilder(logicalId)
    let dataAzurermApiManagementGateway logicalId = DataAzurermApiManagementGatewayBuilder(logicalId)
    let dataAzurermApiManagementGatewayHostNameConfiguration logicalId = DataAzurermApiManagementGatewayHostNameConfigurationBuilder(logicalId)
    let dataAzurermApiManagementGroup logicalId = DataAzurermApiManagementGroupBuilder(logicalId)
    let dataAzurermApiManagementProduct logicalId = DataAzurermApiManagementProductBuilder(logicalId)
    let dataAzurermApiManagementUser logicalId = DataAzurermApiManagementUserBuilder(logicalId)
    let dataAzurermAppConfiguration logicalId = DataAzurermAppConfigurationBuilder(logicalId)
    let dataAzurermAppConfigurationKey logicalId = DataAzurermAppConfigurationKeyBuilder(logicalId)
    let dataAzurermAppConfigurationKeys logicalId = DataAzurermAppConfigurationKeysBuilder(logicalId)
    let dataAzurermAppService logicalId = DataAzurermAppServiceBuilder(logicalId)
    let dataAzurermAppServiceCertificate logicalId = DataAzurermAppServiceCertificateBuilder(logicalId)
    let dataAzurermAppServiceCertificateOrder logicalId = DataAzurermAppServiceCertificateOrderBuilder(logicalId)
    let dataAzurermAppServiceEnvironmentV3 logicalId = DataAzurermAppServiceEnvironmentV3Builder(logicalId)
    let dataAzurermAppServicePlan logicalId = DataAzurermAppServicePlanBuilder(logicalId)
    let dataAzurermApplicationGateway logicalId = DataAzurermApplicationGatewayBuilder(logicalId)
    let dataAzurermApplicationInsights logicalId = DataAzurermApplicationInsightsBuilder(logicalId)
    let dataAzurermApplicationSecurityGroup logicalId = DataAzurermApplicationSecurityGroupBuilder(logicalId)
    let dataAzurermArcMachine logicalId = DataAzurermArcMachineBuilder(logicalId)
    let dataAzurermArcResourceBridgeAppliance logicalId = DataAzurermArcResourceBridgeApplianceBuilder(logicalId)
    let dataAzurermAttestationProvider logicalId = DataAzurermAttestationProviderBuilder(logicalId)
    let dataAzurermAutomationAccount logicalId = DataAzurermAutomationAccountBuilder(logicalId)
    let dataAzurermAutomationRunbook logicalId = DataAzurermAutomationRunbookBuilder(logicalId)
    let dataAzurermAutomationVariableBool logicalId = DataAzurermAutomationVariableBoolBuilder(logicalId)
    let dataAzurermAutomationVariableDatetime logicalId = DataAzurermAutomationVariableDatetimeBuilder(logicalId)
    let dataAzurermAutomationVariableInt logicalId = DataAzurermAutomationVariableIntBuilder(logicalId)
    let dataAzurermAutomationVariableObject logicalId = DataAzurermAutomationVariableObjectBuilder(logicalId)
    let dataAzurermAutomationVariableString logicalId = DataAzurermAutomationVariableStringBuilder(logicalId)
    let dataAzurermAutomationVariables logicalId = DataAzurermAutomationVariablesBuilder(logicalId)
    let dataAzurermAvailabilitySet logicalId = DataAzurermAvailabilitySetBuilder(logicalId)
    let dataAzurermBackupPolicyFileShare logicalId = DataAzurermBackupPolicyFileShareBuilder(logicalId)
    let dataAzurermBackupPolicyVm logicalId = DataAzurermBackupPolicyVmBuilder(logicalId)
    let dataAzurermBastionHost logicalId = DataAzurermBastionHostBuilder(logicalId)
    let dataAzurermBatchAccount logicalId = DataAzurermBatchAccountBuilder(logicalId)
    let dataAzurermBatchApplication logicalId = DataAzurermBatchApplicationBuilder(logicalId)
    let dataAzurermBatchCertificate logicalId = DataAzurermBatchCertificateBuilder(logicalId)
    let dataAzurermBatchPool logicalId = DataAzurermBatchPoolBuilder(logicalId)
    let dataAzurermBillingEnrollmentAccountScope logicalId = DataAzurermBillingEnrollmentAccountScopeBuilder(logicalId)
    let dataAzurermBillingMcaAccountScope logicalId = DataAzurermBillingMcaAccountScopeBuilder(logicalId)
    let dataAzurermBillingMpaAccountScope logicalId = DataAzurermBillingMpaAccountScopeBuilder(logicalId)
    let dataAzurermBlueprintDefinition logicalId = DataAzurermBlueprintDefinitionBuilder(logicalId)
    let dataAzurermBlueprintPublishedVersion logicalId = DataAzurermBlueprintPublishedVersionBuilder(logicalId)
    let dataAzurermCdnFrontdoorCustomDomain logicalId = DataAzurermCdnFrontdoorCustomDomainBuilder(logicalId)
    let dataAzurermCdnFrontdoorEndpoint logicalId = DataAzurermCdnFrontdoorEndpointBuilder(logicalId)
    let dataAzurermCdnFrontdoorFirewallPolicy logicalId = DataAzurermCdnFrontdoorFirewallPolicyBuilder(logicalId)
    let dataAzurermCdnFrontdoorOriginGroup logicalId = DataAzurermCdnFrontdoorOriginGroupBuilder(logicalId)
    let dataAzurermCdnFrontdoorProfile logicalId = DataAzurermCdnFrontdoorProfileBuilder(logicalId)
    let dataAzurermCdnFrontdoorRuleSet logicalId = DataAzurermCdnFrontdoorRuleSetBuilder(logicalId)
    let dataAzurermCdnFrontdoorSecret logicalId = DataAzurermCdnFrontdoorSecretBuilder(logicalId)
    let dataAzurermCdnProfile logicalId = DataAzurermCdnProfileBuilder(logicalId)
    let dataAzurermClientConfig logicalId = DataAzurermClientConfigBuilder(logicalId)
    let dataAzurermCognitiveAccount logicalId = DataAzurermCognitiveAccountBuilder(logicalId)
    let dataAzurermCommunicationService logicalId = DataAzurermCommunicationServiceBuilder(logicalId)
    let dataAzurermConfidentialLedger logicalId = DataAzurermConfidentialLedgerBuilder(logicalId)
    let dataAzurermConsumptionBudgetResourceGroup logicalId = DataAzurermConsumptionBudgetResourceGroupBuilder(logicalId)
    let dataAzurermConsumptionBudgetSubscription logicalId = DataAzurermConsumptionBudgetSubscriptionBuilder(logicalId)
    let dataAzurermContainerApp logicalId = DataAzurermContainerAppBuilder(logicalId)
    let dataAzurermContainerAppEnvironment logicalId = DataAzurermContainerAppEnvironmentBuilder(logicalId)
    let dataAzurermContainerAppEnvironmentCertificate logicalId = DataAzurermContainerAppEnvironmentCertificateBuilder(logicalId)
    let dataAzurermContainerGroup logicalId = DataAzurermContainerGroupBuilder(logicalId)
    let dataAzurermContainerRegistry logicalId = DataAzurermContainerRegistryBuilder(logicalId)
    let dataAzurermContainerRegistryCacheRule logicalId = DataAzurermContainerRegistryCacheRuleBuilder(logicalId)
    let dataAzurermContainerRegistryScopeMap logicalId = DataAzurermContainerRegistryScopeMapBuilder(logicalId)
    let dataAzurermContainerRegistryToken logicalId = DataAzurermContainerRegistryTokenBuilder(logicalId)
    let dataAzurermCosmosdbAccount logicalId = DataAzurermCosmosdbAccountBuilder(logicalId)
    let dataAzurermCosmosdbMongoDatabase logicalId = DataAzurermCosmosdbMongoDatabaseBuilder(logicalId)
    let dataAzurermCosmosdbRestorableDatabaseAccounts logicalId = DataAzurermCosmosdbRestorableDatabaseAccountsBuilder(logicalId)
    let dataAzurermCosmosdbSqlDatabase logicalId = DataAzurermCosmosdbSqlDatabaseBuilder(logicalId)
    let dataAzurermCosmosdbSqlRoleDefinition logicalId = DataAzurermCosmosdbSqlRoleDefinitionBuilder(logicalId)
    let dataAzurermDashboardGrafana logicalId = DataAzurermDashboardGrafanaBuilder(logicalId)
    let dataAzurermDataFactory logicalId = DataAzurermDataFactoryBuilder(logicalId)
    let dataAzurermDataFactoryTriggerSchedule logicalId = DataAzurermDataFactoryTriggerScheduleBuilder(logicalId)
    let dataAzurermDataFactoryTriggerSchedules logicalId = DataAzurermDataFactoryTriggerSchedulesBuilder(logicalId)
    let dataAzurermDataProtectionBackupVault logicalId = DataAzurermDataProtectionBackupVaultBuilder(logicalId)
    let dataAzurermDataShare logicalId = DataAzurermDataShareBuilder(logicalId)
    let dataAzurermDataShareAccount logicalId = DataAzurermDataShareAccountBuilder(logicalId)
    let dataAzurermDataShareDatasetBlobStorage logicalId = DataAzurermDataShareDatasetBlobStorageBuilder(logicalId)
    let dataAzurermDataShareDatasetDataLakeGen2 logicalId = DataAzurermDataShareDatasetDataLakeGen2Builder(logicalId)
    let dataAzurermDataShareDatasetKustoCluster logicalId = DataAzurermDataShareDatasetKustoClusterBuilder(logicalId)
    let dataAzurermDataShareDatasetKustoDatabase logicalId = DataAzurermDataShareDatasetKustoDatabaseBuilder(logicalId)
    let dataAzurermDatabaseMigrationProject logicalId = DataAzurermDatabaseMigrationProjectBuilder(logicalId)
    let dataAzurermDatabaseMigrationService logicalId = DataAzurermDatabaseMigrationServiceBuilder(logicalId)
    let dataAzurermDataboxEdgeDevice logicalId = DataAzurermDataboxEdgeDeviceBuilder(logicalId)
    let dataAzurermDatabricksAccessConnector logicalId = DataAzurermDatabricksAccessConnectorBuilder(logicalId)
    let dataAzurermDatabricksWorkspace logicalId = DataAzurermDatabricksWorkspaceBuilder(logicalId)
    let dataAzurermDatabricksWorkspacePrivateEndpointConnection logicalId = DataAzurermDatabricksWorkspacePrivateEndpointConnectionBuilder(logicalId)
    let dataAzurermDedicatedHost logicalId = DataAzurermDedicatedHostBuilder(logicalId)
    let dataAzurermDedicatedHostGroup logicalId = DataAzurermDedicatedHostGroupBuilder(logicalId)
    let dataAzurermDevTestLab logicalId = DataAzurermDevTestLabBuilder(logicalId)
    let dataAzurermDevTestVirtualNetwork logicalId = DataAzurermDevTestVirtualNetworkBuilder(logicalId)
    let dataAzurermDigitalTwinsInstance logicalId = DataAzurermDigitalTwinsInstanceBuilder(logicalId)
    let dataAzurermDiskAccess logicalId = DataAzurermDiskAccessBuilder(logicalId)
    let dataAzurermDiskEncryptionSet logicalId = DataAzurermDiskEncryptionSetBuilder(logicalId)
    let dataAzurermDnsARecord logicalId = DataAzurermDnsARecordBuilder(logicalId)
    let dataAzurermDnsAaaaRecord logicalId = DataAzurermDnsAaaaRecordBuilder(logicalId)
    let dataAzurermDnsCaaRecord logicalId = DataAzurermDnsCaaRecordBuilder(logicalId)
    let dataAzurermDnsCnameRecord logicalId = DataAzurermDnsCnameRecordBuilder(logicalId)
    let dataAzurermDnsMxRecord logicalId = DataAzurermDnsMxRecordBuilder(logicalId)
    let dataAzurermDnsNsRecord logicalId = DataAzurermDnsNsRecordBuilder(logicalId)
    let dataAzurermDnsPtrRecord logicalId = DataAzurermDnsPtrRecordBuilder(logicalId)
    let dataAzurermDnsSoaRecord logicalId = DataAzurermDnsSoaRecordBuilder(logicalId)
    let dataAzurermDnsSrvRecord logicalId = DataAzurermDnsSrvRecordBuilder(logicalId)
    let dataAzurermDnsTxtRecord logicalId = DataAzurermDnsTxtRecordBuilder(logicalId)
    let dataAzurermDnsZone logicalId = DataAzurermDnsZoneBuilder(logicalId)
    let dataAzurermElasticCloudElasticsearch logicalId = DataAzurermElasticCloudElasticsearchBuilder(logicalId)
    let dataAzurermElasticSan logicalId = DataAzurermElasticSanBuilder(logicalId)
    let dataAzurermElasticSanVolumeGroup logicalId = DataAzurermElasticSanVolumeGroupBuilder(logicalId)
    let dataAzurermElasticSanVolumeSnapshot logicalId = DataAzurermElasticSanVolumeSnapshotBuilder(logicalId)
    let dataAzurermEventgridDomain logicalId = DataAzurermEventgridDomainBuilder(logicalId)
    let dataAzurermEventgridDomainTopic logicalId = DataAzurermEventgridDomainTopicBuilder(logicalId)
    let dataAzurermEventgridSystemTopic logicalId = DataAzurermEventgridSystemTopicBuilder(logicalId)
    let dataAzurermEventgridTopic logicalId = DataAzurermEventgridTopicBuilder(logicalId)
    let dataAzurermEventhub logicalId = DataAzurermEventhubBuilder(logicalId)
    let dataAzurermEventhubAuthorizationRule logicalId = DataAzurermEventhubAuthorizationRuleBuilder(logicalId)
    let dataAzurermEventhubCluster logicalId = DataAzurermEventhubClusterBuilder(logicalId)
    let dataAzurermEventhubConsumerGroup logicalId = DataAzurermEventhubConsumerGroupBuilder(logicalId)
    let dataAzurermEventhubNamespace logicalId = DataAzurermEventhubNamespaceBuilder(logicalId)
    let dataAzurermEventhubNamespaceAuthorizationRule logicalId = DataAzurermEventhubNamespaceAuthorizationRuleBuilder(logicalId)
    let dataAzurermEventhubSas logicalId = DataAzurermEventhubSasBuilder(logicalId)
    let dataAzurermExpressRouteCircuit logicalId = DataAzurermExpressRouteCircuitBuilder(logicalId)
    let dataAzurermExpressRouteCircuitPeering logicalId = DataAzurermExpressRouteCircuitPeeringBuilder(logicalId)
    let dataAzurermExtendedLocations logicalId = DataAzurermExtendedLocationsBuilder(logicalId)
    let dataAzurermFirewall logicalId = DataAzurermFirewallBuilder(logicalId)
    let dataAzurermFirewallPolicy logicalId = DataAzurermFirewallPolicyBuilder(logicalId)
    let dataAzurermFunctionApp logicalId = DataAzurermFunctionAppBuilder(logicalId)
    let dataAzurermFunctionAppHostKeys logicalId = DataAzurermFunctionAppHostKeysBuilder(logicalId)
    let dataAzurermHdinsightCluster logicalId = DataAzurermHdinsightClusterBuilder(logicalId)
    let dataAzurermHealthcareDicomService logicalId = DataAzurermHealthcareDicomServiceBuilder(logicalId)
    let dataAzurermHealthcareFhirService logicalId = DataAzurermHealthcareFhirServiceBuilder(logicalId)
    let dataAzurermHealthcareMedtechService logicalId = DataAzurermHealthcareMedtechServiceBuilder(logicalId)
    let dataAzurermHealthcareService logicalId = DataAzurermHealthcareServiceBuilder(logicalId)
    let dataAzurermHealthcareWorkspace logicalId = DataAzurermHealthcareWorkspaceBuilder(logicalId)
    let dataAzurermImage logicalId = DataAzurermImageBuilder(logicalId)
    let dataAzurermImages logicalId = DataAzurermImagesBuilder(logicalId)
    let dataAzurermIothub logicalId = DataAzurermIothubBuilder(logicalId)
    let dataAzurermIothubDps logicalId = DataAzurermIothubDpsBuilder(logicalId)
    let dataAzurermIothubDpsSharedAccessPolicy logicalId = DataAzurermIothubDpsSharedAccessPolicyBuilder(logicalId)
    let dataAzurermIothubSharedAccessPolicy logicalId = DataAzurermIothubSharedAccessPolicyBuilder(logicalId)
    let dataAzurermIpGroup logicalId = DataAzurermIpGroupBuilder(logicalId)
    let dataAzurermIpGroups logicalId = DataAzurermIpGroupsBuilder(logicalId)
    let dataAzurermKeyVault logicalId = DataAzurermKeyVaultBuilder(logicalId)
    let dataAzurermKeyVaultAccessPolicyA logicalId = DataAzurermKeyVaultAccessPolicyABuilder(logicalId)
    let dataAzurermKeyVaultCertificate logicalId = DataAzurermKeyVaultCertificateBuilder(logicalId)
    let dataAzurermKeyVaultCertificateData logicalId = DataAzurermKeyVaultCertificateDataBuilder(logicalId)
    let dataAzurermKeyVaultCertificateIssuer logicalId = DataAzurermKeyVaultCertificateIssuerBuilder(logicalId)
    let dataAzurermKeyVaultCertificates logicalId = DataAzurermKeyVaultCertificatesBuilder(logicalId)
    let dataAzurermKeyVaultEncryptedValue logicalId = DataAzurermKeyVaultEncryptedValueBuilder(logicalId)
    let dataAzurermKeyVaultKey logicalId = DataAzurermKeyVaultKeyBuilder(logicalId)
    let dataAzurermKeyVaultManagedHardwareSecurityModule logicalId = DataAzurermKeyVaultManagedHardwareSecurityModuleBuilder(logicalId)
    let dataAzurermKeyVaultManagedHardwareSecurityModuleRoleDefinition logicalId = DataAzurermKeyVaultManagedHardwareSecurityModuleRoleDefinitionBuilder(logicalId)
    let dataAzurermKeyVaultSecret logicalId = DataAzurermKeyVaultSecretBuilder(logicalId)
    let dataAzurermKeyVaultSecrets logicalId = DataAzurermKeyVaultSecretsBuilder(logicalId)
    let dataAzurermKubernetesCluster logicalId = DataAzurermKubernetesClusterBuilder(logicalId)
    let dataAzurermKubernetesClusterNodePool logicalId = DataAzurermKubernetesClusterNodePoolBuilder(logicalId)
    let dataAzurermKubernetesNodePoolSnapshot logicalId = DataAzurermKubernetesNodePoolSnapshotBuilder(logicalId)
    let dataAzurermKubernetesServiceVersions logicalId = DataAzurermKubernetesServiceVersionsBuilder(logicalId)
    let dataAzurermKustoCluster logicalId = DataAzurermKustoClusterBuilder(logicalId)
    let dataAzurermKustoDatabase logicalId = DataAzurermKustoDatabaseBuilder(logicalId)
    let dataAzurermLb logicalId = DataAzurermLbBuilder(logicalId)
    let dataAzurermLbBackendAddressPool logicalId = DataAzurermLbBackendAddressPoolBuilder(logicalId)
    let dataAzurermLbOutboundRule logicalId = DataAzurermLbOutboundRuleBuilder(logicalId)
    let dataAzurermLbRule logicalId = DataAzurermLbRuleBuilder(logicalId)
    let dataAzurermLinuxFunctionApp logicalId = DataAzurermLinuxFunctionAppBuilder(logicalId)
    let dataAzurermLinuxWebApp logicalId = DataAzurermLinuxWebAppBuilder(logicalId)
    let dataAzurermLoadTest logicalId = DataAzurermLoadTestBuilder(logicalId)
    let dataAzurermLocalNetworkGateway logicalId = DataAzurermLocalNetworkGatewayBuilder(logicalId)
    let dataAzurermLocation logicalId = DataAzurermLocationBuilder(logicalId)
    let dataAzurermLogAnalyticsWorkspace logicalId = DataAzurermLogAnalyticsWorkspaceBuilder(logicalId)
    let dataAzurermLogicAppIntegrationAccount logicalId = DataAzurermLogicAppIntegrationAccountBuilder(logicalId)
    let dataAzurermLogicAppStandard logicalId = DataAzurermLogicAppStandardBuilder(logicalId)
    let dataAzurermLogicAppWorkflow logicalId = DataAzurermLogicAppWorkflowBuilder(logicalId)
    let dataAzurermMachineLearningWorkspace logicalId = DataAzurermMachineLearningWorkspaceBuilder(logicalId)
    let dataAzurermMaintenanceConfiguration logicalId = DataAzurermMaintenanceConfigurationBuilder(logicalId)
    let dataAzurermManagedApi logicalId = DataAzurermManagedApiBuilder(logicalId)
    let dataAzurermManagedApplicationDefinition logicalId = DataAzurermManagedApplicationDefinitionBuilder(logicalId)
    let dataAzurermManagedDisk logicalId = DataAzurermManagedDiskBuilder(logicalId)
    let dataAzurermManagementGroup logicalId = DataAzurermManagementGroupBuilder(logicalId)
    let dataAzurermManagementGroupTemplateDeployment logicalId = DataAzurermManagementGroupTemplateDeploymentBuilder(logicalId)
    let dataAzurermMapsAccount logicalId = DataAzurermMapsAccountBuilder(logicalId)
    let dataAzurermMarketplaceAgreement logicalId = DataAzurermMarketplaceAgreementBuilder(logicalId)
    let dataAzurermMobileNetwork logicalId = DataAzurermMobileNetworkBuilder(logicalId)
    let dataAzurermMobileNetworkAttachedDataNetwork logicalId = DataAzurermMobileNetworkAttachedDataNetworkBuilder(logicalId)
    let dataAzurermMobileNetworkDataNetwork logicalId = DataAzurermMobileNetworkDataNetworkBuilder(logicalId)
    let dataAzurermMobileNetworkPacketCoreControlPlane logicalId = DataAzurermMobileNetworkPacketCoreControlPlaneBuilder(logicalId)
    let dataAzurermMobileNetworkPacketCoreDataPlane logicalId = DataAzurermMobileNetworkPacketCoreDataPlaneBuilder(logicalId)
    let dataAzurermMobileNetworkService logicalId = DataAzurermMobileNetworkServiceBuilder(logicalId)
    let dataAzurermMobileNetworkSim logicalId = DataAzurermMobileNetworkSimBuilder(logicalId)
    let dataAzurermMobileNetworkSimGroup logicalId = DataAzurermMobileNetworkSimGroupBuilder(logicalId)
    let dataAzurermMobileNetworkSimPolicy logicalId = DataAzurermMobileNetworkSimPolicyBuilder(logicalId)
    let dataAzurermMobileNetworkSite logicalId = DataAzurermMobileNetworkSiteBuilder(logicalId)
    let dataAzurermMobileNetworkSlice logicalId = DataAzurermMobileNetworkSliceBuilder(logicalId)
    let dataAzurermMonitorActionGroup logicalId = DataAzurermMonitorActionGroupBuilder(logicalId)
    let dataAzurermMonitorDataCollectionEndpoint logicalId = DataAzurermMonitorDataCollectionEndpointBuilder(logicalId)
    let dataAzurermMonitorDataCollectionRule logicalId = DataAzurermMonitorDataCollectionRuleBuilder(logicalId)
    let dataAzurermMonitorDiagnosticCategories logicalId = DataAzurermMonitorDiagnosticCategoriesBuilder(logicalId)
    let dataAzurermMonitorScheduledQueryRulesAlert logicalId = DataAzurermMonitorScheduledQueryRulesAlertBuilder(logicalId)
    let dataAzurermMonitorScheduledQueryRulesLog logicalId = DataAzurermMonitorScheduledQueryRulesLogBuilder(logicalId)
    let dataAzurermMonitorWorkspace logicalId = DataAzurermMonitorWorkspaceBuilder(logicalId)
    let dataAzurermMssqlDatabase logicalId = DataAzurermMssqlDatabaseBuilder(logicalId)
    let dataAzurermMssqlElasticpool logicalId = DataAzurermMssqlElasticpoolBuilder(logicalId)
    let dataAzurermMssqlManagedInstance logicalId = DataAzurermMssqlManagedInstanceBuilder(logicalId)
    let dataAzurermMssqlServer logicalId = DataAzurermMssqlServerBuilder(logicalId)
    let dataAzurermMysqlFlexibleServer logicalId = DataAzurermMysqlFlexibleServerBuilder(logicalId)
    let dataAzurermNatGateway logicalId = DataAzurermNatGatewayBuilder(logicalId)
    let dataAzurermNetappAccount logicalId = DataAzurermNetappAccountBuilder(logicalId)
    let dataAzurermNetappAccountEncryption logicalId = DataAzurermNetappAccountEncryptionBuilder(logicalId)
    let dataAzurermNetappPool logicalId = DataAzurermNetappPoolBuilder(logicalId)
    let dataAzurermNetappSnapshot logicalId = DataAzurermNetappSnapshotBuilder(logicalId)
    let dataAzurermNetappSnapshotPolicy logicalId = DataAzurermNetappSnapshotPolicyBuilder(logicalId)
    let dataAzurermNetappVolume logicalId = DataAzurermNetappVolumeBuilder(logicalId)
    let dataAzurermNetappVolumeGroupSapHana logicalId = DataAzurermNetappVolumeGroupSapHanaBuilder(logicalId)
    let dataAzurermNetappVolumeQuotaRule logicalId = DataAzurermNetappVolumeQuotaRuleBuilder(logicalId)
    let dataAzurermNetworkDdosProtectionPlan logicalId = DataAzurermNetworkDdosProtectionPlanBuilder(logicalId)
    let dataAzurermNetworkInterface logicalId = DataAzurermNetworkInterfaceBuilder(logicalId)
    let dataAzurermNetworkManager logicalId = DataAzurermNetworkManagerBuilder(logicalId)
    let dataAzurermNetworkManagerConnectivityConfiguration logicalId = DataAzurermNetworkManagerConnectivityConfigurationBuilder(logicalId)
    let dataAzurermNetworkManagerNetworkGroup logicalId = DataAzurermNetworkManagerNetworkGroupBuilder(logicalId)
    let dataAzurermNetworkSecurityGroup logicalId = DataAzurermNetworkSecurityGroupBuilder(logicalId)
    let dataAzurermNetworkServiceTags logicalId = DataAzurermNetworkServiceTagsBuilder(logicalId)
    let dataAzurermNetworkWatcher logicalId = DataAzurermNetworkWatcherBuilder(logicalId)
    let dataAzurermNginxCertificate logicalId = DataAzurermNginxCertificateBuilder(logicalId)
    let dataAzurermNginxConfiguration logicalId = DataAzurermNginxConfigurationBuilder(logicalId)
    let dataAzurermNginxDeployment logicalId = DataAzurermNginxDeploymentBuilder(logicalId)
    let dataAzurermNotificationHub logicalId = DataAzurermNotificationHubBuilder(logicalId)
    let dataAzurermNotificationHubNamespace logicalId = DataAzurermNotificationHubNamespaceBuilder(logicalId)
    let dataAzurermOrchestratedVirtualMachineScaleSet logicalId = DataAzurermOrchestratedVirtualMachineScaleSetBuilder(logicalId)
    let dataAzurermPaloAltoLocalRulestack logicalId = DataAzurermPaloAltoLocalRulestackBuilder(logicalId)
    let dataAzurermPlatformImage logicalId = DataAzurermPlatformImageBuilder(logicalId)
    let dataAzurermPolicyAssignment logicalId = DataAzurermPolicyAssignmentBuilder(logicalId)
    let dataAzurermPolicyDefinition logicalId = DataAzurermPolicyDefinitionBuilder(logicalId)
    let dataAzurermPolicyDefinitionBuiltIn logicalId = DataAzurermPolicyDefinitionBuiltInBuilder(logicalId)
    let dataAzurermPolicySetDefinition logicalId = DataAzurermPolicySetDefinitionBuilder(logicalId)
    let dataAzurermPolicyVirtualMachineConfigurationAssignment logicalId = DataAzurermPolicyVirtualMachineConfigurationAssignmentBuilder(logicalId)
    let dataAzurermPortalDashboard logicalId = DataAzurermPortalDashboardBuilder(logicalId)
    let dataAzurermPostgresqlFlexibleServer logicalId = DataAzurermPostgresqlFlexibleServerBuilder(logicalId)
    let dataAzurermPostgresqlServer logicalId = DataAzurermPostgresqlServerBuilder(logicalId)
    let dataAzurermPrivateDnsARecord logicalId = DataAzurermPrivateDnsARecordBuilder(logicalId)
    let dataAzurermPrivateDnsAaaaRecord logicalId = DataAzurermPrivateDnsAaaaRecordBuilder(logicalId)
    let dataAzurermPrivateDnsCnameRecord logicalId = DataAzurermPrivateDnsCnameRecordBuilder(logicalId)
    let dataAzurermPrivateDnsMxRecord logicalId = DataAzurermPrivateDnsMxRecordBuilder(logicalId)
    let dataAzurermPrivateDnsPtrRecord logicalId = DataAzurermPrivateDnsPtrRecordBuilder(logicalId)
    let dataAzurermPrivateDnsResolver logicalId = DataAzurermPrivateDnsResolverBuilder(logicalId)
    let dataAzurermPrivateDnsResolverDnsForwardingRuleset logicalId = DataAzurermPrivateDnsResolverDnsForwardingRulesetBuilder(logicalId)
    let dataAzurermPrivateDnsResolverForwardingRule logicalId = DataAzurermPrivateDnsResolverForwardingRuleBuilder(logicalId)
    let dataAzurermPrivateDnsResolverInboundEndpoint logicalId = DataAzurermPrivateDnsResolverInboundEndpointBuilder(logicalId)
    let dataAzurermPrivateDnsResolverOutboundEndpoint logicalId = DataAzurermPrivateDnsResolverOutboundEndpointBuilder(logicalId)
    let dataAzurermPrivateDnsResolverVirtualNetworkLink logicalId = DataAzurermPrivateDnsResolverVirtualNetworkLinkBuilder(logicalId)
    let dataAzurermPrivateDnsSoaRecord logicalId = DataAzurermPrivateDnsSoaRecordBuilder(logicalId)
    let dataAzurermPrivateDnsSrvRecord logicalId = DataAzurermPrivateDnsSrvRecordBuilder(logicalId)
    let dataAzurermPrivateDnsTxtRecord logicalId = DataAzurermPrivateDnsTxtRecordBuilder(logicalId)
    let dataAzurermPrivateDnsZone logicalId = DataAzurermPrivateDnsZoneBuilder(logicalId)
    let dataAzurermPrivateDnsZoneVirtualNetworkLink logicalId = DataAzurermPrivateDnsZoneVirtualNetworkLinkBuilder(logicalId)
    let dataAzurermPrivateEndpointConnection logicalId = DataAzurermPrivateEndpointConnectionBuilder(logicalId)
    let dataAzurermPrivateLinkService logicalId = DataAzurermPrivateLinkServiceBuilder(logicalId)
    let dataAzurermPrivateLinkServiceEndpointConnections logicalId = DataAzurermPrivateLinkServiceEndpointConnectionsBuilder(logicalId)
    let dataAzurermProximityPlacementGroup logicalId = DataAzurermProximityPlacementGroupBuilder(logicalId)
    let dataAzurermPublicIp logicalId = DataAzurermPublicIpBuilder(logicalId)
    let dataAzurermPublicIpPrefix logicalId = DataAzurermPublicIpPrefixBuilder(logicalId)
    let dataAzurermPublicIps logicalId = DataAzurermPublicIpsBuilder(logicalId)
    let dataAzurermPublicMaintenanceConfigurations logicalId = DataAzurermPublicMaintenanceConfigurationsBuilder(logicalId)
    let dataAzurermRecoveryServicesVault logicalId = DataAzurermRecoveryServicesVaultBuilder(logicalId)
    let dataAzurermRedisCache logicalId = DataAzurermRedisCacheBuilder(logicalId)
    let dataAzurermRedisEnterpriseDatabase logicalId = DataAzurermRedisEnterpriseDatabaseBuilder(logicalId)
    let dataAzurermResourceGroup logicalId = DataAzurermResourceGroupBuilder(logicalId)
    let dataAzurermResourceGroupTemplateDeployment logicalId = DataAzurermResourceGroupTemplateDeploymentBuilder(logicalId)
    let dataAzurermResources logicalId = DataAzurermResourcesBuilder(logicalId)
    let dataAzurermRoleDefinition logicalId = DataAzurermRoleDefinitionBuilder(logicalId)
    let dataAzurermRoleManagementPolicy logicalId = DataAzurermRoleManagementPolicyBuilder(logicalId)
    let dataAzurermRouteFilter logicalId = DataAzurermRouteFilterBuilder(logicalId)
    let dataAzurermRouteTable logicalId = DataAzurermRouteTableBuilder(logicalId)
    let dataAzurermSearchService logicalId = DataAzurermSearchServiceBuilder(logicalId)
    let dataAzurermSentinelAlertRule logicalId = DataAzurermSentinelAlertRuleBuilder(logicalId)
    let dataAzurermSentinelAlertRuleAnomaly logicalId = DataAzurermSentinelAlertRuleAnomalyBuilder(logicalId)
    let dataAzurermSentinelAlertRuleTemplate logicalId = DataAzurermSentinelAlertRuleTemplateBuilder(logicalId)
    let dataAzurermServicePlan logicalId = DataAzurermServicePlanBuilder(logicalId)
    let dataAzurermServicebusNamespace logicalId = DataAzurermServicebusNamespaceBuilder(logicalId)
    let dataAzurermServicebusNamespaceAuthorizationRule logicalId = DataAzurermServicebusNamespaceAuthorizationRuleBuilder(logicalId)
    let dataAzurermServicebusNamespaceDisasterRecoveryConfig logicalId = DataAzurermServicebusNamespaceDisasterRecoveryConfigBuilder(logicalId)
    let dataAzurermServicebusQueue logicalId = DataAzurermServicebusQueueBuilder(logicalId)
    let dataAzurermServicebusQueueAuthorizationRule logicalId = DataAzurermServicebusQueueAuthorizationRuleBuilder(logicalId)
    let dataAzurermServicebusSubscription logicalId = DataAzurermServicebusSubscriptionBuilder(logicalId)
    let dataAzurermServicebusTopic logicalId = DataAzurermServicebusTopicBuilder(logicalId)
    let dataAzurermServicebusTopicAuthorizationRule logicalId = DataAzurermServicebusTopicAuthorizationRuleBuilder(logicalId)
    let dataAzurermSharedImage logicalId = DataAzurermSharedImageBuilder(logicalId)
    let dataAzurermSharedImageGallery logicalId = DataAzurermSharedImageGalleryBuilder(logicalId)
    let dataAzurermSharedImageVersion logicalId = DataAzurermSharedImageVersionBuilder(logicalId)
    let dataAzurermSharedImageVersions logicalId = DataAzurermSharedImageVersionsBuilder(logicalId)
    let dataAzurermSignalrService logicalId = DataAzurermSignalrServiceBuilder(logicalId)
    let dataAzurermSiteRecoveryFabric logicalId = DataAzurermSiteRecoveryFabricBuilder(logicalId)
    let dataAzurermSiteRecoveryProtectionContainer logicalId = DataAzurermSiteRecoveryProtectionContainerBuilder(logicalId)
    let dataAzurermSiteRecoveryReplicationPolicy logicalId = DataAzurermSiteRecoveryReplicationPolicyBuilder(logicalId)
    let dataAzurermSiteRecoveryReplicationRecoveryPlan logicalId = DataAzurermSiteRecoveryReplicationRecoveryPlanBuilder(logicalId)
    let dataAzurermSnapshot logicalId = DataAzurermSnapshotBuilder(logicalId)
    let dataAzurermSourceControlToken logicalId = DataAzurermSourceControlTokenBuilder(logicalId)
    let dataAzurermSpatialAnchorsAccount logicalId = DataAzurermSpatialAnchorsAccountBuilder(logicalId)
    let dataAzurermSpringCloudApp logicalId = DataAzurermSpringCloudAppBuilder(logicalId)
    let dataAzurermSpringCloudService logicalId = DataAzurermSpringCloudServiceBuilder(logicalId)
    let dataAzurermSshPublicKey logicalId = DataAzurermSshPublicKeyBuilder(logicalId)
    let dataAzurermStackHciCluster logicalId = DataAzurermStackHciClusterBuilder(logicalId)
    let dataAzurermStaticWebApp logicalId = DataAzurermStaticWebAppBuilder(logicalId)
    let dataAzurermStorageAccount logicalId = DataAzurermStorageAccountBuilder(logicalId)
    let dataAzurermStorageAccountBlobContainerSas logicalId = DataAzurermStorageAccountBlobContainerSasBuilder(logicalId)
    let dataAzurermStorageAccountSas logicalId = DataAzurermStorageAccountSasBuilder(logicalId)
    let dataAzurermStorageBlob logicalId = DataAzurermStorageBlobBuilder(logicalId)
    let dataAzurermStorageContainer logicalId = DataAzurermStorageContainerBuilder(logicalId)
    let dataAzurermStorageContainers logicalId = DataAzurermStorageContainersBuilder(logicalId)
    let dataAzurermStorageEncryptionScope logicalId = DataAzurermStorageEncryptionScopeBuilder(logicalId)
    let dataAzurermStorageManagementPolicy logicalId = DataAzurermStorageManagementPolicyBuilder(logicalId)
    let dataAzurermStorageQueue logicalId = DataAzurermStorageQueueBuilder(logicalId)
    let dataAzurermStorageShare logicalId = DataAzurermStorageShareBuilder(logicalId)
    let dataAzurermStorageSync logicalId = DataAzurermStorageSyncBuilder(logicalId)
    let dataAzurermStorageSyncGroup logicalId = DataAzurermStorageSyncGroupBuilder(logicalId)
    let dataAzurermStorageTable logicalId = DataAzurermStorageTableBuilder(logicalId)
    let dataAzurermStorageTableEntities logicalId = DataAzurermStorageTableEntitiesBuilder(logicalId)
    let dataAzurermStorageTableEntity logicalId = DataAzurermStorageTableEntityBuilder(logicalId)
    let dataAzurermStreamAnalyticsJob logicalId = DataAzurermStreamAnalyticsJobBuilder(logicalId)
    let dataAzurermSubnet logicalId = DataAzurermSubnetBuilder(logicalId)
    let dataAzurermSubscription logicalId = DataAzurermSubscriptionBuilder(logicalId)
    let dataAzurermSubscriptionTemplateDeployment logicalId = DataAzurermSubscriptionTemplateDeploymentBuilder(logicalId)
    let dataAzurermSubscriptions logicalId = DataAzurermSubscriptionsBuilder(logicalId)
    let dataAzurermSynapseWorkspace logicalId = DataAzurermSynapseWorkspaceBuilder(logicalId)
    let dataAzurermSystemCenterVirtualMachineManagerInventoryItems logicalId = DataAzurermSystemCenterVirtualMachineManagerInventoryItemsBuilder(logicalId)
    let dataAzurermTemplateSpecVersion logicalId = DataAzurermTemplateSpecVersionBuilder(logicalId)
    let dataAzurermTenantTemplateDeployment logicalId = DataAzurermTenantTemplateDeploymentBuilder(logicalId)
    let dataAzurermTrafficManagerGeographicalLocation logicalId = DataAzurermTrafficManagerGeographicalLocationBuilder(logicalId)
    let dataAzurermTrafficManagerProfile logicalId = DataAzurermTrafficManagerProfileBuilder(logicalId)
    let dataAzurermUserAssignedIdentity logicalId = DataAzurermUserAssignedIdentityBuilder(logicalId)
    let dataAzurermVirtualDesktopApplicationGroup logicalId = DataAzurermVirtualDesktopApplicationGroupBuilder(logicalId)
    let dataAzurermVirtualDesktopHostPool logicalId = DataAzurermVirtualDesktopHostPoolBuilder(logicalId)
    let dataAzurermVirtualDesktopWorkspace logicalId = DataAzurermVirtualDesktopWorkspaceBuilder(logicalId)
    let dataAzurermVirtualHub logicalId = DataAzurermVirtualHubBuilder(logicalId)
    let dataAzurermVirtualHubConnection logicalId = DataAzurermVirtualHubConnectionBuilder(logicalId)
    let dataAzurermVirtualHubRouteTable logicalId = DataAzurermVirtualHubRouteTableBuilder(logicalId)
    let dataAzurermVirtualMachine logicalId = DataAzurermVirtualMachineBuilder(logicalId)
    let dataAzurermVirtualMachineScaleSet logicalId = DataAzurermVirtualMachineScaleSetBuilder(logicalId)
    let dataAzurermVirtualNetwork logicalId = DataAzurermVirtualNetworkBuilder(logicalId)
    let dataAzurermVirtualNetworkGateway logicalId = DataAzurermVirtualNetworkGatewayBuilder(logicalId)
    let dataAzurermVirtualNetworkGatewayConnection logicalId = DataAzurermVirtualNetworkGatewayConnectionBuilder(logicalId)
    let dataAzurermVirtualWan logicalId = DataAzurermVirtualWanBuilder(logicalId)
    let dataAzurermVmwarePrivateCloud logicalId = DataAzurermVmwarePrivateCloudBuilder(logicalId)
    let dataAzurermVpnGateway logicalId = DataAzurermVpnGatewayBuilder(logicalId)
    let dataAzurermWebApplicationFirewallPolicy logicalId = DataAzurermWebApplicationFirewallPolicyBuilder(logicalId)
    let dataAzurermWebPubsub logicalId = DataAzurermWebPubsubBuilder(logicalId)
    let dataAzurermWebPubsubPrivateLinkResource logicalId = DataAzurermWebPubsubPrivateLinkResourceBuilder(logicalId)
    let dataAzurermWindowsFunctionApp logicalId = DataAzurermWindowsFunctionAppBuilder(logicalId)
    let dataAzurermWindowsWebApp logicalId = DataAzurermWindowsWebAppBuilder(logicalId)
    let dataFactory logicalId = DataFactoryBuilder(logicalId)
    let dataFactoryCredentialServicePrincipal logicalId = DataFactoryCredentialServicePrincipalBuilder(logicalId)
    let dataFactoryCredentialUserManagedIdentity logicalId = DataFactoryCredentialUserManagedIdentityBuilder(logicalId)
    let dataFactoryCustomDataset logicalId = DataFactoryCustomDatasetBuilder(logicalId)
    let dataFactoryDataFlow logicalId = DataFactoryDataFlowBuilder(logicalId)
    let dataFactoryDatasetAzureBlob logicalId = DataFactoryDatasetAzureBlobBuilder(logicalId)
    let dataFactoryDatasetAzureSqlTable logicalId = DataFactoryDatasetAzureSqlTableBuilder(logicalId)
    let dataFactoryDatasetBinary logicalId = DataFactoryDatasetBinaryBuilder(logicalId)
    let dataFactoryDatasetCosmosdbSqlapi logicalId = DataFactoryDatasetCosmosdbSqlapiBuilder(logicalId)
    let dataFactoryDatasetDelimitedText logicalId = DataFactoryDatasetDelimitedTextBuilder(logicalId)
    let dataFactoryDatasetHttp logicalId = DataFactoryDatasetHttpBuilder(logicalId)
    let dataFactoryDatasetJson logicalId = DataFactoryDatasetJsonBuilder(logicalId)
    let dataFactoryDatasetMysql logicalId = DataFactoryDatasetMysqlBuilder(logicalId)
    let dataFactoryDatasetParquet logicalId = DataFactoryDatasetParquetBuilder(logicalId)
    let dataFactoryDatasetPostgresql logicalId = DataFactoryDatasetPostgresqlBuilder(logicalId)
    let dataFactoryDatasetSnowflake logicalId = DataFactoryDatasetSnowflakeBuilder(logicalId)
    let dataFactoryDatasetSqlServerTable logicalId = DataFactoryDatasetSqlServerTableBuilder(logicalId)
    let dataFactoryFlowletDataFlow logicalId = DataFactoryFlowletDataFlowBuilder(logicalId)
    let dataFactoryIntegrationRuntimeAzure logicalId = DataFactoryIntegrationRuntimeAzureBuilder(logicalId)
    let dataFactoryIntegrationRuntimeAzureSsis logicalId = DataFactoryIntegrationRuntimeAzureSsisBuilder(logicalId)
    let dataFactoryIntegrationRuntimeSelfHosted logicalId = DataFactoryIntegrationRuntimeSelfHostedBuilder(logicalId)
    let dataFactoryLinkedCustomService logicalId = DataFactoryLinkedCustomServiceBuilder(logicalId)
    let dataFactoryLinkedServiceAzureBlobStorage logicalId = DataFactoryLinkedServiceAzureBlobStorageBuilder(logicalId)
    let dataFactoryLinkedServiceAzureDatabricks logicalId = DataFactoryLinkedServiceAzureDatabricksBuilder(logicalId)
    let dataFactoryLinkedServiceAzureFileStorage logicalId = DataFactoryLinkedServiceAzureFileStorageBuilder(logicalId)
    let dataFactoryLinkedServiceAzureFunction logicalId = DataFactoryLinkedServiceAzureFunctionBuilder(logicalId)
    let dataFactoryLinkedServiceAzureSearch logicalId = DataFactoryLinkedServiceAzureSearchBuilder(logicalId)
    let dataFactoryLinkedServiceAzureSqlDatabase logicalId = DataFactoryLinkedServiceAzureSqlDatabaseBuilder(logicalId)
    let dataFactoryLinkedServiceAzureTableStorage logicalId = DataFactoryLinkedServiceAzureTableStorageBuilder(logicalId)
    let dataFactoryLinkedServiceCosmosdb logicalId = DataFactoryLinkedServiceCosmosdbBuilder(logicalId)
    let dataFactoryLinkedServiceCosmosdbMongoapi logicalId = DataFactoryLinkedServiceCosmosdbMongoapiBuilder(logicalId)
    let dataFactoryLinkedServiceDataLakeStorageGen2 logicalId = DataFactoryLinkedServiceDataLakeStorageGen2Builder(logicalId)
    let dataFactoryLinkedServiceKeyVault logicalId = DataFactoryLinkedServiceKeyVaultBuilder(logicalId)
    let dataFactoryLinkedServiceKusto logicalId = DataFactoryLinkedServiceKustoBuilder(logicalId)
    let dataFactoryLinkedServiceMysql logicalId = DataFactoryLinkedServiceMysqlBuilder(logicalId)
    let dataFactoryLinkedServiceOdata logicalId = DataFactoryLinkedServiceOdataBuilder(logicalId)
    let dataFactoryLinkedServiceOdbc logicalId = DataFactoryLinkedServiceOdbcBuilder(logicalId)
    let dataFactoryLinkedServicePostgresql logicalId = DataFactoryLinkedServicePostgresqlBuilder(logicalId)
    let dataFactoryLinkedServiceSftp logicalId = DataFactoryLinkedServiceSftpBuilder(logicalId)
    let dataFactoryLinkedServiceSnowflake logicalId = DataFactoryLinkedServiceSnowflakeBuilder(logicalId)
    let dataFactoryLinkedServiceSqlServer logicalId = DataFactoryLinkedServiceSqlServerBuilder(logicalId)
    let dataFactoryLinkedServiceSynapse logicalId = DataFactoryLinkedServiceSynapseBuilder(logicalId)
    let dataFactoryLinkedServiceWeb logicalId = DataFactoryLinkedServiceWebBuilder(logicalId)
    let dataFactoryManagedPrivateEndpoint logicalId = DataFactoryManagedPrivateEndpointBuilder(logicalId)
    let dataFactoryPipeline logicalId = DataFactoryPipelineBuilder(logicalId)
    let dataFactoryTriggerBlobEvent logicalId = DataFactoryTriggerBlobEventBuilder(logicalId)
    let dataFactoryTriggerCustomEvent logicalId = DataFactoryTriggerCustomEventBuilder(logicalId)
    let dataFactoryTriggerSchedule logicalId = DataFactoryTriggerScheduleBuilder(logicalId)
    let dataFactoryTriggerTumblingWindow logicalId = DataFactoryTriggerTumblingWindowBuilder(logicalId)
    let dataProtectionBackupInstanceBlobStorage logicalId = DataProtectionBackupInstanceBlobStorageBuilder(logicalId)
    let dataProtectionBackupInstanceDisk logicalId = DataProtectionBackupInstanceDiskBuilder(logicalId)
    let dataProtectionBackupInstanceKubernetesCluster logicalId = DataProtectionBackupInstanceKubernetesClusterBuilder(logicalId)
    let dataProtectionBackupInstancePostgresql logicalId = DataProtectionBackupInstancePostgresqlBuilder(logicalId)
    let dataProtectionBackupInstancePostgresqlFlexibleServer logicalId = DataProtectionBackupInstancePostgresqlFlexibleServerBuilder(logicalId)
    let dataProtectionBackupPolicyBlobStorage logicalId = DataProtectionBackupPolicyBlobStorageBuilder(logicalId)
    let dataProtectionBackupPolicyDisk logicalId = DataProtectionBackupPolicyDiskBuilder(logicalId)
    let dataProtectionBackupPolicyKubernetesCluster logicalId = DataProtectionBackupPolicyKubernetesClusterBuilder(logicalId)
    let dataProtectionBackupPolicyPostgresql logicalId = DataProtectionBackupPolicyPostgresqlBuilder(logicalId)
    let dataProtectionBackupPolicyPostgresqlFlexibleServer logicalId = DataProtectionBackupPolicyPostgresqlFlexibleServerBuilder(logicalId)
    let dataProtectionBackupVault logicalId = DataProtectionBackupVaultBuilder(logicalId)
    let dataProtectionResourceGuard logicalId = DataProtectionResourceGuardBuilder(logicalId)
    let dataShare logicalId = DataShareBuilder(logicalId)
    let dataShareAccount logicalId = DataShareAccountBuilder(logicalId)
    let dataShareDatasetBlobStorage logicalId = DataShareDatasetBlobStorageBuilder(logicalId)
    let dataShareDatasetDataLakeGen2 logicalId = DataShareDatasetDataLakeGen2Builder(logicalId)
    let dataShareDatasetKustoCluster logicalId = DataShareDatasetKustoClusterBuilder(logicalId)
    let dataShareDatasetKustoDatabase logicalId = DataShareDatasetKustoDatabaseBuilder(logicalId)
    let databaseMigrationProject logicalId = DatabaseMigrationProjectBuilder(logicalId)
    let databaseMigrationService logicalId = DatabaseMigrationServiceBuilder(logicalId)
    let databoxEdgeDevice logicalId = DataboxEdgeDeviceBuilder(logicalId)
    let databricksAccessConnector logicalId = DatabricksAccessConnectorBuilder(logicalId)
    let databricksVirtualNetworkPeering logicalId = DatabricksVirtualNetworkPeeringBuilder(logicalId)
    let databricksWorkspace logicalId = DatabricksWorkspaceBuilder(logicalId)
    let databricksWorkspaceCustomerManagedKey logicalId = DatabricksWorkspaceCustomerManagedKeyBuilder(logicalId)
    let databricksWorkspaceRootDbfsCustomerManagedKey logicalId = DatabricksWorkspaceRootDbfsCustomerManagedKeyBuilder(logicalId)
    let datadogMonitor logicalId = DatadogMonitorBuilder(logicalId)
    let datadogMonitorSsoConfiguration logicalId = DatadogMonitorSsoConfigurationBuilder(logicalId)
    let datadogMonitorTagRule logicalId = DatadogMonitorTagRuleBuilder(logicalId)
    let dedicatedHardwareSecurityModule logicalId = DedicatedHardwareSecurityModuleBuilder(logicalId)
    let dedicatedHost logicalId = DedicatedHostBuilder(logicalId)
    let dedicatedHostGroup logicalId = DedicatedHostGroupBuilder(logicalId)
    let devCenter logicalId = DevCenterBuilder(logicalId)
    let devCenterCatalog logicalId = DevCenterCatalogBuilder(logicalId)
    let devCenterDevBoxDefinition logicalId = DevCenterDevBoxDefinitionBuilder(logicalId)
    let devCenterEnvironmentType logicalId = DevCenterEnvironmentTypeBuilder(logicalId)
    let devCenterGallery logicalId = DevCenterGalleryBuilder(logicalId)
    let devCenterNetworkConnection logicalId = DevCenterNetworkConnectionBuilder(logicalId)
    let devCenterProject logicalId = DevCenterProjectBuilder(logicalId)
    let devCenterProjectEnvironmentType logicalId = DevCenterProjectEnvironmentTypeBuilder(logicalId)
    let devTestGlobalVmShutdownSchedule logicalId = DevTestGlobalVmShutdownScheduleBuilder(logicalId)
    let devTestLab logicalId = DevTestLabBuilder(logicalId)
    let devTestLinuxVirtualMachine logicalId = DevTestLinuxVirtualMachineBuilder(logicalId)
    let devTestPolicy logicalId = DevTestPolicyBuilder(logicalId)
    let devTestSchedule logicalId = DevTestScheduleBuilder(logicalId)
    let devTestVirtualNetwork logicalId = DevTestVirtualNetworkBuilder(logicalId)
    let devTestWindowsVirtualMachine logicalId = DevTestWindowsVirtualMachineBuilder(logicalId)
    let digitalTwinsEndpointEventgrid logicalId = DigitalTwinsEndpointEventgridBuilder(logicalId)
    let digitalTwinsEndpointEventhub logicalId = DigitalTwinsEndpointEventhubBuilder(logicalId)
    let digitalTwinsEndpointServicebus logicalId = DigitalTwinsEndpointServicebusBuilder(logicalId)
    let digitalTwinsInstance logicalId = DigitalTwinsInstanceBuilder(logicalId)
    let digitalTwinsTimeSeriesDatabaseConnection logicalId = DigitalTwinsTimeSeriesDatabaseConnectionBuilder(logicalId)
    let diskAccess logicalId = DiskAccessBuilder(logicalId)
    let diskEncryptionSet logicalId = DiskEncryptionSetBuilder(logicalId)
    let dnsARecord logicalId = DnsARecordBuilder(logicalId)
    let dnsAaaaRecord logicalId = DnsAaaaRecordBuilder(logicalId)
    let dnsCaaRecord logicalId = DnsCaaRecordBuilder(logicalId)
    let dnsCnameRecord logicalId = DnsCnameRecordBuilder(logicalId)
    let dnsMxRecord logicalId = DnsMxRecordBuilder(logicalId)
    let dnsNsRecord logicalId = DnsNsRecordBuilder(logicalId)
    let dnsPtrRecord logicalId = DnsPtrRecordBuilder(logicalId)
    let dnsSrvRecord logicalId = DnsSrvRecordBuilder(logicalId)
    let dnsTxtRecord logicalId = DnsTxtRecordBuilder(logicalId)
    let dnsZone logicalId = DnsZoneBuilder(logicalId)
    let elasticCloudElasticsearch logicalId = ElasticCloudElasticsearchBuilder(logicalId)
    let elasticSan logicalId = ElasticSanBuilder(logicalId)
    let elasticSanVolume logicalId = ElasticSanVolumeBuilder(logicalId)
    let elasticSanVolumeGroup logicalId = ElasticSanVolumeGroupBuilder(logicalId)
    let emailCommunicationService logicalId = EmailCommunicationServiceBuilder(logicalId)
    let emailCommunicationServiceDomain logicalId = EmailCommunicationServiceDomainBuilder(logicalId)
    let eventgridDomain logicalId = EventgridDomainBuilder(logicalId)
    let eventgridDomainTopic logicalId = EventgridDomainTopicBuilder(logicalId)
    let eventgridEventSubscription logicalId = EventgridEventSubscriptionBuilder(logicalId)
    let eventgridSystemTopic logicalId = EventgridSystemTopicBuilder(logicalId)
    let eventgridSystemTopicEventSubscription logicalId = EventgridSystemTopicEventSubscriptionBuilder(logicalId)
    let eventgridTopic logicalId = EventgridTopicBuilder(logicalId)
    let eventhub logicalId = EventhubBuilder(logicalId)
    let eventhubAuthorizationRule logicalId = EventhubAuthorizationRuleBuilder(logicalId)
    let eventhubCluster logicalId = EventhubClusterBuilder(logicalId)
    let eventhubConsumerGroup logicalId = EventhubConsumerGroupBuilder(logicalId)
    let eventhubNamespace logicalId = EventhubNamespaceBuilder(logicalId)
    let eventhubNamespaceAuthorizationRule logicalId = EventhubNamespaceAuthorizationRuleBuilder(logicalId)
    let eventhubNamespaceCustomerManagedKey logicalId = EventhubNamespaceCustomerManagedKeyBuilder(logicalId)
    let eventhubNamespaceDisasterRecoveryConfig logicalId = EventhubNamespaceDisasterRecoveryConfigBuilder(logicalId)
    let eventhubNamespaceSchemaGroup logicalId = EventhubNamespaceSchemaGroupBuilder(logicalId)
    let expressRouteCircuit logicalId = ExpressRouteCircuitBuilder(logicalId)
    let expressRouteCircuitAuthorization logicalId = ExpressRouteCircuitAuthorizationBuilder(logicalId)
    let expressRouteCircuitConnection logicalId = ExpressRouteCircuitConnectionBuilder(logicalId)
    let expressRouteCircuitPeering logicalId = ExpressRouteCircuitPeeringBuilder(logicalId)
    let expressRouteConnection logicalId = ExpressRouteConnectionBuilder(logicalId)
    let expressRouteGateway logicalId = ExpressRouteGatewayBuilder(logicalId)
    let expressRoutePort logicalId = ExpressRoutePortBuilder(logicalId)
    let expressRoutePortAuthorization logicalId = ExpressRoutePortAuthorizationBuilder(logicalId)
    let extendedCustomLocation logicalId = ExtendedCustomLocationBuilder(logicalId)
    let federatedIdentityCredential logicalId = FederatedIdentityCredentialBuilder(logicalId)
    let firewall logicalId = FirewallBuilder(logicalId)
    let firewallApplicationRuleCollection logicalId = FirewallApplicationRuleCollectionBuilder(logicalId)
    let firewallNatRuleCollection logicalId = FirewallNatRuleCollectionBuilder(logicalId)
    let firewallNetworkRuleCollection logicalId = FirewallNetworkRuleCollectionBuilder(logicalId)
    let firewallPolicy logicalId = FirewallPolicyBuilder(logicalId)
    let firewallPolicyRuleCollectionGroup logicalId = FirewallPolicyRuleCollectionGroupBuilder(logicalId)
    let fluidRelayServer logicalId = FluidRelayServerBuilder(logicalId)
    let frontdoor logicalId = FrontdoorBuilder(logicalId)
    let frontdoorCustomHttpsConfiguration logicalId = FrontdoorCustomHttpsConfigurationBuilder(logicalId)
    let frontdoorFirewallPolicy logicalId = FrontdoorFirewallPolicyBuilder(logicalId)
    let frontdoorRulesEngine logicalId = FrontdoorRulesEngineBuilder(logicalId)
    let functionApp logicalId = FunctionAppBuilder(logicalId)
    let functionAppActiveSlot logicalId = FunctionAppActiveSlotBuilder(logicalId)
    let functionAppConnection logicalId = FunctionAppConnectionBuilder(logicalId)
    let functionAppFunction logicalId = FunctionAppFunctionBuilder(logicalId)
    let functionAppHybridConnection logicalId = FunctionAppHybridConnectionBuilder(logicalId)
    let functionAppSlot logicalId = FunctionAppSlotBuilder(logicalId)
    let galleryApplication logicalId = GalleryApplicationBuilder(logicalId)
    let galleryApplicationVersion logicalId = GalleryApplicationVersionBuilder(logicalId)
    let graphServicesAccount logicalId = GraphServicesAccountBuilder(logicalId)
    let hdinsightHadoopCluster logicalId = HdinsightHadoopClusterBuilder(logicalId)
    let hdinsightHbaseCluster logicalId = HdinsightHbaseClusterBuilder(logicalId)
    let hdinsightInteractiveQueryCluster logicalId = HdinsightInteractiveQueryClusterBuilder(logicalId)
    let hdinsightKafkaCluster logicalId = HdinsightKafkaClusterBuilder(logicalId)
    let hdinsightSparkCluster logicalId = HdinsightSparkClusterBuilder(logicalId)
    let healthbot logicalId = HealthbotBuilder(logicalId)
    let healthcareDicomService logicalId = HealthcareDicomServiceBuilder(logicalId)
    let healthcareFhirService logicalId = HealthcareFhirServiceBuilder(logicalId)
    let healthcareMedtechService logicalId = HealthcareMedtechServiceBuilder(logicalId)
    let healthcareMedtechServiceFhirDestination logicalId = HealthcareMedtechServiceFhirDestinationBuilder(logicalId)
    let healthcareService logicalId = HealthcareServiceBuilder(logicalId)
    let healthcareWorkspace logicalId = HealthcareWorkspaceBuilder(logicalId)
    let hpcCache logicalId = HpcCacheBuilder(logicalId)
    let hpcCacheAccessPolicy logicalId = HpcCacheAccessPolicyBuilder(logicalId)
    let hpcCacheBlobNfsTarget logicalId = HpcCacheBlobNfsTargetBuilder(logicalId)
    let hpcCacheBlobTarget logicalId = HpcCacheBlobTargetBuilder(logicalId)
    let hpcCacheNfsTarget logicalId = HpcCacheNfsTargetBuilder(logicalId)
    let image logicalId = ImageBuilder(logicalId)
    let iotSecurityDeviceGroup logicalId = IotSecurityDeviceGroupBuilder(logicalId)
    let iotSecuritySolution logicalId = IotSecuritySolutionBuilder(logicalId)
    let iotcentralApplication logicalId = IotcentralApplicationBuilder(logicalId)
    let iotcentralApplicationNetworkRuleSet logicalId = IotcentralApplicationNetworkRuleSetBuilder(logicalId)
    let iotcentralOrganization logicalId = IotcentralOrganizationBuilder(logicalId)
    let iothub logicalId = IothubBuilder(logicalId)
    let iothubCertificate logicalId = IothubCertificateBuilder(logicalId)
    let iothubConsumerGroup logicalId = IothubConsumerGroupBuilder(logicalId)
    let iothubDeviceUpdateAccount logicalId = IothubDeviceUpdateAccountBuilder(logicalId)
    let iothubDeviceUpdateInstance logicalId = IothubDeviceUpdateInstanceBuilder(logicalId)
    let iothubDps logicalId = IothubDpsBuilder(logicalId)
    let iothubDpsCertificate logicalId = IothubDpsCertificateBuilder(logicalId)
    let iothubDpsSharedAccessPolicy logicalId = IothubDpsSharedAccessPolicyBuilder(logicalId)
    let iothubEndpointCosmosdbAccount logicalId = IothubEndpointCosmosdbAccountBuilder(logicalId)
    let iothubEndpointEventhub logicalId = IothubEndpointEventhubBuilder(logicalId)
    let iothubEndpointServicebusQueue logicalId = IothubEndpointServicebusQueueBuilder(logicalId)
    let iothubEndpointServicebusTopic logicalId = IothubEndpointServicebusTopicBuilder(logicalId)
    let iothubEndpointStorageContainer logicalId = IothubEndpointStorageContainerBuilder(logicalId)
    let iothubEnrichmentA logicalId = IothubEnrichmentABuilder(logicalId)
    let iothubFallbackRouteA logicalId = IothubFallbackRouteABuilder(logicalId)
    let iothubFileUploadA logicalId = IothubFileUploadABuilder(logicalId)
    let iothubRouteA logicalId = IothubRouteABuilder(logicalId)
    let iothubSharedAccessPolicyA logicalId = IothubSharedAccessPolicyABuilder(logicalId)
    let ipGroup logicalId = IpGroupBuilder(logicalId)
    let ipGroupCidr logicalId = IpGroupCidrBuilder(logicalId)
    let keyVault logicalId = KeyVaultBuilder(logicalId)
    let keyVaultAccessPolicyA logicalId = KeyVaultAccessPolicyABuilder(logicalId)
    let keyVaultCertificate logicalId = KeyVaultCertificateBuilder(logicalId)
    let keyVaultCertificateContacts logicalId = KeyVaultCertificateContactsBuilder(logicalId)
    let keyVaultCertificateIssuer logicalId = KeyVaultCertificateIssuerBuilder(logicalId)
    let keyVaultKey logicalId = KeyVaultKeyBuilder(logicalId)
    let keyVaultManagedHardwareSecurityModule logicalId = KeyVaultManagedHardwareSecurityModuleBuilder(logicalId)
    let keyVaultManagedHardwareSecurityModuleKey logicalId = KeyVaultManagedHardwareSecurityModuleKeyBuilder(logicalId)
    let keyVaultManagedHardwareSecurityModuleRoleAssignment logicalId = KeyVaultManagedHardwareSecurityModuleRoleAssignmentBuilder(logicalId)
    let keyVaultManagedHardwareSecurityModuleRoleDefinition logicalId = KeyVaultManagedHardwareSecurityModuleRoleDefinitionBuilder(logicalId)
    let keyVaultManagedStorageAccount logicalId = KeyVaultManagedStorageAccountBuilder(logicalId)
    let keyVaultManagedStorageAccountSasTokenDefinition logicalId = KeyVaultManagedStorageAccountSasTokenDefinitionBuilder(logicalId)
    let keyVaultSecret logicalId = KeyVaultSecretBuilder(logicalId)
    let kubernetesCluster logicalId = KubernetesClusterBuilder(logicalId)
    let kubernetesClusterExtension logicalId = KubernetesClusterExtensionBuilder(logicalId)
    let kubernetesClusterNodePool logicalId = KubernetesClusterNodePoolBuilder(logicalId)
    let kubernetesClusterTrustedAccessRoleBinding logicalId = KubernetesClusterTrustedAccessRoleBindingBuilder(logicalId)
    let kubernetesFleetManager logicalId = KubernetesFleetManagerBuilder(logicalId)
    let kubernetesFleetMember logicalId = KubernetesFleetMemberBuilder(logicalId)
    let kubernetesFleetUpdateRun logicalId = KubernetesFleetUpdateRunBuilder(logicalId)
    let kubernetesFleetUpdateStrategy logicalId = KubernetesFleetUpdateStrategyBuilder(logicalId)
    let kubernetesFluxConfiguration logicalId = KubernetesFluxConfigurationBuilder(logicalId)
    let kustoAttachedDatabaseConfiguration logicalId = KustoAttachedDatabaseConfigurationBuilder(logicalId)
    let kustoCluster logicalId = KustoClusterBuilder(logicalId)
    let kustoClusterCustomerManagedKey logicalId = KustoClusterCustomerManagedKeyBuilder(logicalId)
    let kustoClusterManagedPrivateEndpoint logicalId = KustoClusterManagedPrivateEndpointBuilder(logicalId)
    let kustoClusterPrincipalAssignment logicalId = KustoClusterPrincipalAssignmentBuilder(logicalId)
    let kustoCosmosdbDataConnection logicalId = KustoCosmosdbDataConnectionBuilder(logicalId)
    let kustoDatabase logicalId = KustoDatabaseBuilder(logicalId)
    let kustoDatabasePrincipalAssignment logicalId = KustoDatabasePrincipalAssignmentBuilder(logicalId)
    let kustoEventgridDataConnection logicalId = KustoEventgridDataConnectionBuilder(logicalId)
    let kustoEventhubDataConnection logicalId = KustoEventhubDataConnectionBuilder(logicalId)
    let kustoIothubDataConnection logicalId = KustoIothubDataConnectionBuilder(logicalId)
    let kustoScript logicalId = KustoScriptBuilder(logicalId)
    let lb logicalId = LbBuilder(logicalId)
    let lbBackendAddressPool logicalId = LbBackendAddressPoolBuilder(logicalId)
    let lbBackendAddressPoolAddress logicalId = LbBackendAddressPoolAddressBuilder(logicalId)
    let lbNatPool logicalId = LbNatPoolBuilder(logicalId)
    let lbNatRule logicalId = LbNatRuleBuilder(logicalId)
    let lbOutboundRule logicalId = LbOutboundRuleBuilder(logicalId)
    let lbProbe logicalId = LbProbeBuilder(logicalId)
    let lbRule logicalId = LbRuleBuilder(logicalId)
    let lighthouseAssignment logicalId = LighthouseAssignmentBuilder(logicalId)
    let lighthouseDefinition logicalId = LighthouseDefinitionBuilder(logicalId)
    let linuxFunctionApp logicalId = LinuxFunctionAppBuilder(logicalId)
    let linuxFunctionAppSlot logicalId = LinuxFunctionAppSlotBuilder(logicalId)
    let linuxVirtualMachine logicalId = LinuxVirtualMachineBuilder(logicalId)
    let linuxVirtualMachineScaleSet logicalId = LinuxVirtualMachineScaleSetBuilder(logicalId)
    let linuxWebApp logicalId = LinuxWebAppBuilder(logicalId)
    let linuxWebAppSlot logicalId = LinuxWebAppSlotBuilder(logicalId)
    let loadTest logicalId = LoadTestBuilder(logicalId)
    let localNetworkGateway logicalId = LocalNetworkGatewayBuilder(logicalId)
    let logAnalyticsCluster logicalId = LogAnalyticsClusterBuilder(logicalId)
    let logAnalyticsClusterCustomerManagedKey logicalId = LogAnalyticsClusterCustomerManagedKeyBuilder(logicalId)
    let logAnalyticsDataExportRule logicalId = LogAnalyticsDataExportRuleBuilder(logicalId)
    let logAnalyticsDatasourceWindowsEvent logicalId = LogAnalyticsDatasourceWindowsEventBuilder(logicalId)
    let logAnalyticsDatasourceWindowsPerformanceCounter logicalId = LogAnalyticsDatasourceWindowsPerformanceCounterBuilder(logicalId)
    let logAnalyticsLinkedService logicalId = LogAnalyticsLinkedServiceBuilder(logicalId)
    let logAnalyticsLinkedStorageAccount logicalId = LogAnalyticsLinkedStorageAccountBuilder(logicalId)
    let logAnalyticsQueryPack logicalId = LogAnalyticsQueryPackBuilder(logicalId)
    let logAnalyticsQueryPackQuery logicalId = LogAnalyticsQueryPackQueryBuilder(logicalId)
    let logAnalyticsSavedSearch logicalId = LogAnalyticsSavedSearchBuilder(logicalId)
    let logAnalyticsSolution logicalId = LogAnalyticsSolutionBuilder(logicalId)
    let logAnalyticsStorageInsights logicalId = LogAnalyticsStorageInsightsBuilder(logicalId)
    let logAnalyticsWorkspace logicalId = LogAnalyticsWorkspaceBuilder(logicalId)
    let logAnalyticsWorkspaceTable logicalId = LogAnalyticsWorkspaceTableBuilder(logicalId)
    let logicAppActionCustom logicalId = LogicAppActionCustomBuilder(logicalId)
    let logicAppActionHttp logicalId = LogicAppActionHttpBuilder(logicalId)
    let logicAppIntegrationAccount logicalId = LogicAppIntegrationAccountBuilder(logicalId)
    let logicAppIntegrationAccountAgreement logicalId = LogicAppIntegrationAccountAgreementBuilder(logicalId)
    let logicAppIntegrationAccountAssembly logicalId = LogicAppIntegrationAccountAssemblyBuilder(logicalId)
    let logicAppIntegrationAccountBatchConfiguration logicalId = LogicAppIntegrationAccountBatchConfigurationBuilder(logicalId)
    let logicAppIntegrationAccountCertificate logicalId = LogicAppIntegrationAccountCertificateBuilder(logicalId)
    let logicAppIntegrationAccountMap logicalId = LogicAppIntegrationAccountMapBuilder(logicalId)
    let logicAppIntegrationAccountPartner logicalId = LogicAppIntegrationAccountPartnerBuilder(logicalId)
    let logicAppIntegrationAccountSchema logicalId = LogicAppIntegrationAccountSchemaBuilder(logicalId)
    let logicAppIntegrationAccountSession logicalId = LogicAppIntegrationAccountSessionBuilder(logicalId)
    let logicAppStandard logicalId = LogicAppStandardBuilder(logicalId)
    let logicAppTriggerCustom logicalId = LogicAppTriggerCustomBuilder(logicalId)
    let logicAppTriggerHttpRequest logicalId = LogicAppTriggerHttpRequestBuilder(logicalId)
    let logicAppTriggerRecurrence logicalId = LogicAppTriggerRecurrenceBuilder(logicalId)
    let logicAppWorkflow logicalId = LogicAppWorkflowBuilder(logicalId)
    let machineLearningComputeCluster logicalId = MachineLearningComputeClusterBuilder(logicalId)
    let machineLearningComputeInstance logicalId = MachineLearningComputeInstanceBuilder(logicalId)
    let machineLearningDatastoreBlobstorage logicalId = MachineLearningDatastoreBlobstorageBuilder(logicalId)
    let machineLearningDatastoreDatalakeGen2 logicalId = MachineLearningDatastoreDatalakeGen2Builder(logicalId)
    let machineLearningDatastoreFileshare logicalId = MachineLearningDatastoreFileshareBuilder(logicalId)
    let machineLearningInferenceCluster logicalId = MachineLearningInferenceClusterBuilder(logicalId)
    let machineLearningSynapseSpark logicalId = MachineLearningSynapseSparkBuilder(logicalId)
    let machineLearningWorkspace logicalId = MachineLearningWorkspaceBuilder(logicalId)
    let maintenanceAssignmentDedicatedHost logicalId = MaintenanceAssignmentDedicatedHostBuilder(logicalId)
    let maintenanceAssignmentDynamicScope logicalId = MaintenanceAssignmentDynamicScopeBuilder(logicalId)
    let maintenanceAssignmentVirtualMachine logicalId = MaintenanceAssignmentVirtualMachineBuilder(logicalId)
    let maintenanceAssignmentVirtualMachineScaleSet logicalId = MaintenanceAssignmentVirtualMachineScaleSetBuilder(logicalId)
    let maintenanceConfiguration logicalId = MaintenanceConfigurationBuilder(logicalId)
    let managedApplication logicalId = ManagedApplicationBuilder(logicalId)
    let managedApplicationDefinition logicalId = ManagedApplicationDefinitionBuilder(logicalId)
    let managedDisk logicalId = ManagedDiskBuilder(logicalId)
    let managedDiskSasToken logicalId = ManagedDiskSasTokenBuilder(logicalId)
    let managedLustreFileSystem logicalId = ManagedLustreFileSystemBuilder(logicalId)
    let managementGroup logicalId = ManagementGroupBuilder(logicalId)
    let managementGroupPolicyAssignment logicalId = ManagementGroupPolicyAssignmentBuilder(logicalId)
    let managementGroupPolicyExemption logicalId = ManagementGroupPolicyExemptionBuilder(logicalId)
    let managementGroupPolicyRemediation logicalId = ManagementGroupPolicyRemediationBuilder(logicalId)
    let managementGroupSubscriptionAssociation logicalId = ManagementGroupSubscriptionAssociationBuilder(logicalId)
    let managementGroupTemplateDeployment logicalId = ManagementGroupTemplateDeploymentBuilder(logicalId)
    let managementLock logicalId = ManagementLockBuilder(logicalId)
    let mapsAccount logicalId = MapsAccountBuilder(logicalId)
    let mapsCreator logicalId = MapsCreatorBuilder(logicalId)
    let marketplaceAgreement logicalId = MarketplaceAgreementBuilder(logicalId)
    let marketplaceRoleAssignment logicalId = MarketplaceRoleAssignmentBuilder(logicalId)
    let mediaServicesAccountFilter logicalId = MediaServicesAccountFilterBuilder(logicalId)
    let mobileNetwork logicalId = MobileNetworkBuilder(logicalId)
    let mobileNetworkAttachedDataNetwork logicalId = MobileNetworkAttachedDataNetworkBuilder(logicalId)
    let mobileNetworkDataNetwork logicalId = MobileNetworkDataNetworkBuilder(logicalId)
    let mobileNetworkPacketCoreControlPlane logicalId = MobileNetworkPacketCoreControlPlaneBuilder(logicalId)
    let mobileNetworkPacketCoreDataPlane logicalId = MobileNetworkPacketCoreDataPlaneBuilder(logicalId)
    let mobileNetworkService logicalId = MobileNetworkServiceBuilder(logicalId)
    let mobileNetworkSim logicalId = MobileNetworkSimBuilder(logicalId)
    let mobileNetworkSimGroup logicalId = MobileNetworkSimGroupBuilder(logicalId)
    let mobileNetworkSimPolicy logicalId = MobileNetworkSimPolicyBuilder(logicalId)
    let mobileNetworkSite logicalId = MobileNetworkSiteBuilder(logicalId)
    let mobileNetworkSlice logicalId = MobileNetworkSliceBuilder(logicalId)
    let monitorAadDiagnosticSetting logicalId = MonitorAadDiagnosticSettingBuilder(logicalId)
    let monitorActionGroup logicalId = MonitorActionGroupBuilder(logicalId)
    let monitorActivityLogAlert logicalId = MonitorActivityLogAlertBuilder(logicalId)
    let monitorAlertProcessingRuleActionGroup logicalId = MonitorAlertProcessingRuleActionGroupBuilder(logicalId)
    let monitorAlertProcessingRuleSuppression logicalId = MonitorAlertProcessingRuleSuppressionBuilder(logicalId)
    let monitorAlertPrometheusRuleGroup logicalId = MonitorAlertPrometheusRuleGroupBuilder(logicalId)
    let monitorAutoscaleSetting logicalId = MonitorAutoscaleSettingBuilder(logicalId)
    let monitorDataCollectionEndpoint logicalId = MonitorDataCollectionEndpointBuilder(logicalId)
    let monitorDataCollectionRule logicalId = MonitorDataCollectionRuleBuilder(logicalId)
    let monitorDataCollectionRuleAssociation logicalId = MonitorDataCollectionRuleAssociationBuilder(logicalId)
    let monitorDiagnosticSetting logicalId = MonitorDiagnosticSettingBuilder(logicalId)
    let monitorLogProfile logicalId = MonitorLogProfileBuilder(logicalId)
    let monitorMetricAlert logicalId = MonitorMetricAlertBuilder(logicalId)
    let monitorPrivateLinkScope logicalId = MonitorPrivateLinkScopeBuilder(logicalId)
    let monitorPrivateLinkScopedService logicalId = MonitorPrivateLinkScopedServiceBuilder(logicalId)
    let monitorScheduledQueryRulesAlert logicalId = MonitorScheduledQueryRulesAlertBuilder(logicalId)
    let monitorScheduledQueryRulesAlertV2 logicalId = MonitorScheduledQueryRulesAlertV2Builder(logicalId)
    let monitorScheduledQueryRulesLog logicalId = MonitorScheduledQueryRulesLogBuilder(logicalId)
    let monitorSmartDetectorAlertRule logicalId = MonitorSmartDetectorAlertRuleBuilder(logicalId)
    let monitorWorkspace logicalId = MonitorWorkspaceBuilder(logicalId)
    let mssqlDatabase logicalId = MssqlDatabaseBuilder(logicalId)
    let mssqlDatabaseExtendedAuditingPolicy logicalId = MssqlDatabaseExtendedAuditingPolicyBuilder(logicalId)
    let mssqlDatabaseVulnerabilityAssessmentRuleBaseline logicalId = MssqlDatabaseVulnerabilityAssessmentRuleBaselineBuilder(logicalId)
    let mssqlElasticpool logicalId = MssqlElasticpoolBuilder(logicalId)
    let mssqlFailoverGroup logicalId = MssqlFailoverGroupBuilder(logicalId)
    let mssqlFirewallRule logicalId = MssqlFirewallRuleBuilder(logicalId)
    let mssqlJobAgent logicalId = MssqlJobAgentBuilder(logicalId)
    let mssqlJobCredential logicalId = MssqlJobCredentialBuilder(logicalId)
    let mssqlManagedDatabase logicalId = MssqlManagedDatabaseBuilder(logicalId)
    let mssqlManagedInstance logicalId = MssqlManagedInstanceBuilder(logicalId)
    let mssqlManagedInstanceActiveDirectoryAdministrator logicalId = MssqlManagedInstanceActiveDirectoryAdministratorBuilder(logicalId)
    let mssqlManagedInstanceFailoverGroup logicalId = MssqlManagedInstanceFailoverGroupBuilder(logicalId)
    let mssqlManagedInstanceSecurityAlertPolicy logicalId = MssqlManagedInstanceSecurityAlertPolicyBuilder(logicalId)
    let mssqlManagedInstanceTransparentDataEncryption logicalId = MssqlManagedInstanceTransparentDataEncryptionBuilder(logicalId)
    let mssqlManagedInstanceVulnerabilityAssessment logicalId = MssqlManagedInstanceVulnerabilityAssessmentBuilder(logicalId)
    let mssqlOutboundFirewallRule logicalId = MssqlOutboundFirewallRuleBuilder(logicalId)
    let mssqlServer logicalId = MssqlServerBuilder(logicalId)
    let mssqlServerDnsAlias logicalId = MssqlServerDnsAliasBuilder(logicalId)
    let mssqlServerExtendedAuditingPolicy logicalId = MssqlServerExtendedAuditingPolicyBuilder(logicalId)
    let mssqlServerMicrosoftSupportAuditingPolicy logicalId = MssqlServerMicrosoftSupportAuditingPolicyBuilder(logicalId)
    let mssqlServerSecurityAlertPolicy logicalId = MssqlServerSecurityAlertPolicyBuilder(logicalId)
    let mssqlServerTransparentDataEncryption logicalId = MssqlServerTransparentDataEncryptionBuilder(logicalId)
    let mssqlServerVulnerabilityAssessment logicalId = MssqlServerVulnerabilityAssessmentBuilder(logicalId)
    let mssqlVirtualMachine logicalId = MssqlVirtualMachineBuilder(logicalId)
    let mssqlVirtualMachineAvailabilityGroupListener logicalId = MssqlVirtualMachineAvailabilityGroupListenerBuilder(logicalId)
    let mssqlVirtualMachineGroup logicalId = MssqlVirtualMachineGroupBuilder(logicalId)
    let mssqlVirtualNetworkRule logicalId = MssqlVirtualNetworkRuleBuilder(logicalId)
    let mysqlFlexibleDatabase logicalId = MysqlFlexibleDatabaseBuilder(logicalId)
    let mysqlFlexibleServer logicalId = MysqlFlexibleServerBuilder(logicalId)
    let mysqlFlexibleServerActiveDirectoryAdministrator logicalId = MysqlFlexibleServerActiveDirectoryAdministratorBuilder(logicalId)
    let mysqlFlexibleServerConfiguration logicalId = MysqlFlexibleServerConfigurationBuilder(logicalId)
    let mysqlFlexibleServerFirewallRule logicalId = MysqlFlexibleServerFirewallRuleBuilder(logicalId)
    let natGateway logicalId = NatGatewayBuilder(logicalId)
    let natGatewayPublicIpAssociation logicalId = NatGatewayPublicIpAssociationBuilder(logicalId)
    let natGatewayPublicIpPrefixAssociation logicalId = NatGatewayPublicIpPrefixAssociationBuilder(logicalId)
    let netappAccount logicalId = NetappAccountBuilder(logicalId)
    let netappAccountEncryption logicalId = NetappAccountEncryptionBuilder(logicalId)
    let netappPool logicalId = NetappPoolBuilder(logicalId)
    let netappSnapshot logicalId = NetappSnapshotBuilder(logicalId)
    let netappSnapshotPolicy logicalId = NetappSnapshotPolicyBuilder(logicalId)
    let netappVolume logicalId = NetappVolumeBuilder(logicalId)
    let netappVolumeGroupSapHana logicalId = NetappVolumeGroupSapHanaBuilder(logicalId)
    let netappVolumeQuotaRule logicalId = NetappVolumeQuotaRuleBuilder(logicalId)
    let networkConnectionMonitor logicalId = NetworkConnectionMonitorBuilder(logicalId)
    let networkDdosProtectionPlan logicalId = NetworkDdosProtectionPlanBuilder(logicalId)
    let networkFunctionAzureTrafficCollector logicalId = NetworkFunctionAzureTrafficCollectorBuilder(logicalId)
    let networkFunctionCollectorPolicy logicalId = NetworkFunctionCollectorPolicyBuilder(logicalId)
    let networkInterface logicalId = NetworkInterfaceBuilder(logicalId)
    let networkInterfaceApplicationGatewayBackendAddressPoolAssociation logicalId = NetworkInterfaceApplicationGatewayBackendAddressPoolAssociationBuilder(logicalId)
    let networkInterfaceApplicationSecurityGroupAssociation logicalId = NetworkInterfaceApplicationSecurityGroupAssociationBuilder(logicalId)
    let networkInterfaceBackendAddressPoolAssociation logicalId = NetworkInterfaceBackendAddressPoolAssociationBuilder(logicalId)
    let networkInterfaceNatRuleAssociation logicalId = NetworkInterfaceNatRuleAssociationBuilder(logicalId)
    let networkInterfaceSecurityGroupAssociation logicalId = NetworkInterfaceSecurityGroupAssociationBuilder(logicalId)
    let networkManager logicalId = NetworkManagerBuilder(logicalId)
    let networkManagerAdminRule logicalId = NetworkManagerAdminRuleBuilder(logicalId)
    let networkManagerAdminRuleCollection logicalId = NetworkManagerAdminRuleCollectionBuilder(logicalId)
    let networkManagerConnectivityConfiguration logicalId = NetworkManagerConnectivityConfigurationBuilder(logicalId)
    let networkManagerDeployment logicalId = NetworkManagerDeploymentBuilder(logicalId)
    let networkManagerManagementGroupConnection logicalId = NetworkManagerManagementGroupConnectionBuilder(logicalId)
    let networkManagerNetworkGroup logicalId = NetworkManagerNetworkGroupBuilder(logicalId)
    let networkManagerScopeConnection logicalId = NetworkManagerScopeConnectionBuilder(logicalId)
    let networkManagerSecurityAdminConfiguration logicalId = NetworkManagerSecurityAdminConfigurationBuilder(logicalId)
    let networkManagerStaticMember logicalId = NetworkManagerStaticMemberBuilder(logicalId)
    let networkManagerSubscriptionConnection logicalId = NetworkManagerSubscriptionConnectionBuilder(logicalId)
    let networkPacketCapture logicalId = NetworkPacketCaptureBuilder(logicalId)
    let networkProfile logicalId = NetworkProfileBuilder(logicalId)
    let networkSecurityGroup logicalId = NetworkSecurityGroupBuilder(logicalId)
    let networkSecurityRule logicalId = NetworkSecurityRuleBuilder(logicalId)
    let networkWatcher logicalId = NetworkWatcherBuilder(logicalId)
    let networkWatcherFlowLog logicalId = NetworkWatcherFlowLogBuilder(logicalId)
    let newRelicMonitor logicalId = NewRelicMonitorBuilder(logicalId)
    let newRelicTagRule logicalId = NewRelicTagRuleBuilder(logicalId)
    let nginxCertificate logicalId = NginxCertificateBuilder(logicalId)
    let nginxConfiguration logicalId = NginxConfigurationBuilder(logicalId)
    let nginxDeployment logicalId = NginxDeploymentBuilder(logicalId)
    let notificationHub logicalId = NotificationHubBuilder(logicalId)
    let notificationHubAuthorizationRule logicalId = NotificationHubAuthorizationRuleBuilder(logicalId)
    let notificationHubNamespace logicalId = NotificationHubNamespaceBuilder(logicalId)
    let orbitalContact logicalId = OrbitalContactBuilder(logicalId)
    let orbitalContactProfile logicalId = OrbitalContactProfileBuilder(logicalId)
    let orbitalSpacecraft logicalId = OrbitalSpacecraftBuilder(logicalId)
    let orchestratedVirtualMachineScaleSet logicalId = OrchestratedVirtualMachineScaleSetBuilder(logicalId)
    let paloAltoLocalRulestack logicalId = PaloAltoLocalRulestackBuilder(logicalId)
    let paloAltoLocalRulestackCertificate logicalId = PaloAltoLocalRulestackCertificateBuilder(logicalId)
    let paloAltoLocalRulestackFqdnList logicalId = PaloAltoLocalRulestackFqdnListBuilder(logicalId)
    let paloAltoLocalRulestackOutboundTrustCertificateAssociation logicalId = PaloAltoLocalRulestackOutboundTrustCertificateAssociationBuilder(logicalId)
    let paloAltoLocalRulestackOutboundUntrustCertificateAssociation logicalId = PaloAltoLocalRulestackOutboundUntrustCertificateAssociationBuilder(logicalId)
    let paloAltoLocalRulestackPrefixList logicalId = PaloAltoLocalRulestackPrefixListBuilder(logicalId)
    let paloAltoLocalRulestackRule logicalId = PaloAltoLocalRulestackRuleBuilder(logicalId)
    let paloAltoNextGenerationFirewallVirtualHubLocalRulestack logicalId = PaloAltoNextGenerationFirewallVirtualHubLocalRulestackBuilder(logicalId)
    let paloAltoNextGenerationFirewallVirtualHubPanorama logicalId = PaloAltoNextGenerationFirewallVirtualHubPanoramaBuilder(logicalId)
    let paloAltoNextGenerationFirewallVirtualNetworkLocalRulestack logicalId = PaloAltoNextGenerationFirewallVirtualNetworkLocalRulestackBuilder(logicalId)
    let paloAltoNextGenerationFirewallVirtualNetworkPanorama logicalId = PaloAltoNextGenerationFirewallVirtualNetworkPanoramaBuilder(logicalId)
    let paloAltoVirtualNetworkAppliance logicalId = PaloAltoVirtualNetworkApplianceBuilder(logicalId)
    let pimActiveRoleAssignment logicalId = PimActiveRoleAssignmentBuilder(logicalId)
    let pimEligibleRoleAssignment logicalId = PimEligibleRoleAssignmentBuilder(logicalId)
    let pointToSiteVpnGateway logicalId = PointToSiteVpnGatewayBuilder(logicalId)
    let policyDefinition logicalId = PolicyDefinitionBuilder(logicalId)
    let policySetDefinition logicalId = PolicySetDefinitionBuilder(logicalId)
    let policyVirtualMachineConfigurationAssignment logicalId = PolicyVirtualMachineConfigurationAssignmentBuilder(logicalId)
    let portalDashboard logicalId = PortalDashboardBuilder(logicalId)
    let portalTenantConfiguration logicalId = PortalTenantConfigurationBuilder(logicalId)
    let postgresqlActiveDirectoryAdministrator logicalId = PostgresqlActiveDirectoryAdministratorBuilder(logicalId)
    let postgresqlConfiguration logicalId = PostgresqlConfigurationBuilder(logicalId)
    let postgresqlDatabase logicalId = PostgresqlDatabaseBuilder(logicalId)
    let postgresqlFirewallRule logicalId = PostgresqlFirewallRuleBuilder(logicalId)
    let postgresqlFlexibleServer logicalId = PostgresqlFlexibleServerBuilder(logicalId)
    let postgresqlFlexibleServerActiveDirectoryAdministrator logicalId = PostgresqlFlexibleServerActiveDirectoryAdministratorBuilder(logicalId)
    let postgresqlFlexibleServerConfiguration logicalId = PostgresqlFlexibleServerConfigurationBuilder(logicalId)
    let postgresqlFlexibleServerDatabase logicalId = PostgresqlFlexibleServerDatabaseBuilder(logicalId)
    let postgresqlFlexibleServerFirewallRule logicalId = PostgresqlFlexibleServerFirewallRuleBuilder(logicalId)
    let postgresqlFlexibleServerVirtualEndpoint logicalId = PostgresqlFlexibleServerVirtualEndpointBuilder(logicalId)
    let postgresqlServer logicalId = PostgresqlServerBuilder(logicalId)
    let postgresqlServerKey logicalId = PostgresqlServerKeyBuilder(logicalId)
    let postgresqlVirtualNetworkRule logicalId = PostgresqlVirtualNetworkRuleBuilder(logicalId)
    let powerbiEmbedded logicalId = PowerbiEmbeddedBuilder(logicalId)
    let privateDnsARecord logicalId = PrivateDnsARecordBuilder(logicalId)
    let privateDnsAaaaRecord logicalId = PrivateDnsAaaaRecordBuilder(logicalId)
    let privateDnsCnameRecord logicalId = PrivateDnsCnameRecordBuilder(logicalId)
    let privateDnsMxRecord logicalId = PrivateDnsMxRecordBuilder(logicalId)
    let privateDnsPtrRecord logicalId = PrivateDnsPtrRecordBuilder(logicalId)
    let privateDnsResolver logicalId = PrivateDnsResolverBuilder(logicalId)
    let privateDnsResolverDnsForwardingRuleset logicalId = PrivateDnsResolverDnsForwardingRulesetBuilder(logicalId)
    let privateDnsResolverForwardingRule logicalId = PrivateDnsResolverForwardingRuleBuilder(logicalId)
    let privateDnsResolverInboundEndpoint logicalId = PrivateDnsResolverInboundEndpointBuilder(logicalId)
    let privateDnsResolverOutboundEndpoint logicalId = PrivateDnsResolverOutboundEndpointBuilder(logicalId)
    let privateDnsResolverVirtualNetworkLink logicalId = PrivateDnsResolverVirtualNetworkLinkBuilder(logicalId)
    let privateDnsSrvRecord logicalId = PrivateDnsSrvRecordBuilder(logicalId)
    let privateDnsTxtRecord logicalId = PrivateDnsTxtRecordBuilder(logicalId)
    let privateDnsZone logicalId = PrivateDnsZoneBuilder(logicalId)
    let privateDnsZoneVirtualNetworkLink logicalId = PrivateDnsZoneVirtualNetworkLinkBuilder(logicalId)
    let privateEndpoint logicalId = PrivateEndpointBuilder(logicalId)
    let privateEndpointApplicationSecurityGroupAssociation logicalId = PrivateEndpointApplicationSecurityGroupAssociationBuilder(logicalId)
    let privateLinkService logicalId = PrivateLinkServiceBuilder(logicalId)
    let provider logicalId = AzurermProviderBuilder(logicalId)
    let proximityPlacementGroup logicalId = ProximityPlacementGroupBuilder(logicalId)
    let publicIp logicalId = PublicIpBuilder(logicalId)
    let publicIpPrefix logicalId = PublicIpPrefixBuilder(logicalId)
    let purviewAccount logicalId = PurviewAccountBuilder(logicalId)
    let recoveryServicesVault logicalId = RecoveryServicesVaultBuilder(logicalId)
    let recoveryServicesVaultResourceGuardAssociation logicalId = RecoveryServicesVaultResourceGuardAssociationBuilder(logicalId)
    let redhatOpenshiftCluster logicalId = RedhatOpenshiftClusterBuilder(logicalId)
    let redisCache logicalId = RedisCacheBuilder(logicalId)
    let redisCacheAccessPolicy logicalId = RedisCacheAccessPolicyBuilder(logicalId)
    let redisCacheAccessPolicyAssignment logicalId = RedisCacheAccessPolicyAssignmentBuilder(logicalId)
    let redisEnterpriseCluster logicalId = RedisEnterpriseClusterBuilder(logicalId)
    let redisEnterpriseDatabase logicalId = RedisEnterpriseDatabaseBuilder(logicalId)
    let redisFirewallRule logicalId = RedisFirewallRuleBuilder(logicalId)
    let redisLinkedServer logicalId = RedisLinkedServerBuilder(logicalId)
    let relayHybridConnection logicalId = RelayHybridConnectionBuilder(logicalId)
    let relayHybridConnectionAuthorizationRule logicalId = RelayHybridConnectionAuthorizationRuleBuilder(logicalId)
    let relayNamespace logicalId = RelayNamespaceBuilder(logicalId)
    let relayNamespaceAuthorizationRule logicalId = RelayNamespaceAuthorizationRuleBuilder(logicalId)
    let resourceDeploymentScriptAzureCli logicalId = ResourceDeploymentScriptAzureCliBuilder(logicalId)
    let resourceDeploymentScriptAzurePowerShell logicalId = ResourceDeploymentScriptAzurePowerShellBuilder(logicalId)
    let resourceGroup logicalId = ResourceGroupBuilder(logicalId)
    let resourceGroupCostManagementExport logicalId = ResourceGroupCostManagementExportBuilder(logicalId)
    let resourceGroupCostManagementView logicalId = ResourceGroupCostManagementViewBuilder(logicalId)
    let resourceGroupPolicyAssignment logicalId = ResourceGroupPolicyAssignmentBuilder(logicalId)
    let resourceGroupPolicyExemption logicalId = ResourceGroupPolicyExemptionBuilder(logicalId)
    let resourceGroupPolicyRemediation logicalId = ResourceGroupPolicyRemediationBuilder(logicalId)
    let resourceGroupTemplateDeployment logicalId = ResourceGroupTemplateDeploymentBuilder(logicalId)
    let resourceManagementPrivateLink logicalId = ResourceManagementPrivateLinkBuilder(logicalId)
    let resourceManagementPrivateLinkAssociation logicalId = ResourceManagementPrivateLinkAssociationBuilder(logicalId)
    let resourcePolicyAssignment logicalId = ResourcePolicyAssignmentBuilder(logicalId)
    let resourcePolicyExemption logicalId = ResourcePolicyExemptionBuilder(logicalId)
    let resourcePolicyRemediation logicalId = ResourcePolicyRemediationBuilder(logicalId)
    let resourceProviderRegistration logicalId = ResourceProviderRegistrationBuilder(logicalId)
    let restorePointCollection logicalId = RestorePointCollectionBuilder(logicalId)
    let roleAssignment logicalId = RoleAssignmentBuilder(logicalId)
    let roleDefinition logicalId = RoleDefinitionBuilder(logicalId)
    let roleManagementPolicy logicalId = RoleManagementPolicyBuilder(logicalId)
    let route logicalId = RouteBuilder(logicalId)
    let routeFilter logicalId = RouteFilterBuilder(logicalId)
    let routeMap logicalId = RouteMapBuilder(logicalId)
    let routeServer logicalId = RouteServerBuilder(logicalId)
    let routeServerBgpConnection logicalId = RouteServerBgpConnectionBuilder(logicalId)
    let routeTable logicalId = RouteTableBuilder(logicalId)
    let searchService logicalId = SearchServiceBuilder(logicalId)
    let searchSharedPrivateLinkService logicalId = SearchSharedPrivateLinkServiceBuilder(logicalId)
    let securityCenterAssessment logicalId = SecurityCenterAssessmentBuilder(logicalId)
    let securityCenterAssessmentPolicy logicalId = SecurityCenterAssessmentPolicyBuilder(logicalId)
    let securityCenterAutoProvisioning logicalId = SecurityCenterAutoProvisioningBuilder(logicalId)
    let securityCenterAutomation logicalId = SecurityCenterAutomationBuilder(logicalId)
    let securityCenterContact logicalId = SecurityCenterContactBuilder(logicalId)
    let securityCenterServerVulnerabilityAssessmentVirtualMachine logicalId = SecurityCenterServerVulnerabilityAssessmentVirtualMachineBuilder(logicalId)
    let securityCenterServerVulnerabilityAssessmentsSetting logicalId = SecurityCenterServerVulnerabilityAssessmentsSettingBuilder(logicalId)
    let securityCenterSetting logicalId = SecurityCenterSettingBuilder(logicalId)
    let securityCenterStorageDefender logicalId = SecurityCenterStorageDefenderBuilder(logicalId)
    let securityCenterSubscriptionPricing logicalId = SecurityCenterSubscriptionPricingBuilder(logicalId)
    let securityCenterWorkspace logicalId = SecurityCenterWorkspaceBuilder(logicalId)
    let sentinelAlertRuleAnomalyBuiltIn logicalId = SentinelAlertRuleAnomalyBuiltInBuilder(logicalId)
    let sentinelAlertRuleAnomalyDuplicate logicalId = SentinelAlertRuleAnomalyDuplicateBuilder(logicalId)
    let sentinelAlertRuleFusion logicalId = SentinelAlertRuleFusionBuilder(logicalId)
    let sentinelAlertRuleMachineLearningBehaviorAnalytics logicalId = SentinelAlertRuleMachineLearningBehaviorAnalyticsBuilder(logicalId)
    let sentinelAlertRuleMsSecurityIncident logicalId = SentinelAlertRuleMsSecurityIncidentBuilder(logicalId)
    let sentinelAlertRuleNrt logicalId = SentinelAlertRuleNrtBuilder(logicalId)
    let sentinelAlertRuleScheduled logicalId = SentinelAlertRuleScheduledBuilder(logicalId)
    let sentinelAlertRuleThreatIntelligence logicalId = SentinelAlertRuleThreatIntelligenceBuilder(logicalId)
    let sentinelAutomationRule logicalId = SentinelAutomationRuleBuilder(logicalId)
    let sentinelDataConnectorAwsCloudTrail logicalId = SentinelDataConnectorAwsCloudTrailBuilder(logicalId)
    let sentinelDataConnectorAwsS3 logicalId = SentinelDataConnectorAwsS3Builder(logicalId)
    let sentinelDataConnectorAzureActiveDirectory logicalId = SentinelDataConnectorAzureActiveDirectoryBuilder(logicalId)
    let sentinelDataConnectorAzureAdvancedThreatProtection logicalId = SentinelDataConnectorAzureAdvancedThreatProtectionBuilder(logicalId)
    let sentinelDataConnectorAzureSecurityCenter logicalId = SentinelDataConnectorAzureSecurityCenterBuilder(logicalId)
    let sentinelDataConnectorDynamics365 logicalId = SentinelDataConnectorDynamics365Builder(logicalId)
    let sentinelDataConnectorIot logicalId = SentinelDataConnectorIotBuilder(logicalId)
    let sentinelDataConnectorMicrosoftCloudAppSecurity logicalId = SentinelDataConnectorMicrosoftCloudAppSecurityBuilder(logicalId)
    let sentinelDataConnectorMicrosoftDefenderAdvancedThreatProtection logicalId = SentinelDataConnectorMicrosoftDefenderAdvancedThreatProtectionBuilder(logicalId)
    let sentinelDataConnectorMicrosoftThreatIntelligence logicalId = SentinelDataConnectorMicrosoftThreatIntelligenceBuilder(logicalId)
    let sentinelDataConnectorMicrosoftThreatProtection logicalId = SentinelDataConnectorMicrosoftThreatProtectionBuilder(logicalId)
    let sentinelDataConnectorOffice365 logicalId = SentinelDataConnectorOffice365Builder(logicalId)
    let sentinelDataConnectorOffice365Project logicalId = SentinelDataConnectorOffice365ProjectBuilder(logicalId)
    let sentinelDataConnectorOfficeAtp logicalId = SentinelDataConnectorOfficeAtpBuilder(logicalId)
    let sentinelDataConnectorOfficeIrm logicalId = SentinelDataConnectorOfficeIrmBuilder(logicalId)
    let sentinelDataConnectorOfficePowerBi logicalId = SentinelDataConnectorOfficePowerBiBuilder(logicalId)
    let sentinelDataConnectorThreatIntelligence logicalId = SentinelDataConnectorThreatIntelligenceBuilder(logicalId)
    let sentinelDataConnectorThreatIntelligenceTaxii logicalId = SentinelDataConnectorThreatIntelligenceTaxiiBuilder(logicalId)
    let sentinelLogAnalyticsWorkspaceOnboarding logicalId = SentinelLogAnalyticsWorkspaceOnboardingBuilder(logicalId)
    let sentinelMetadata logicalId = SentinelMetadataBuilder(logicalId)
    let sentinelThreatIntelligenceIndicator logicalId = SentinelThreatIntelligenceIndicatorBuilder(logicalId)
    let sentinelWatchlist logicalId = SentinelWatchlistBuilder(logicalId)
    let sentinelWatchlistItem logicalId = SentinelWatchlistItemBuilder(logicalId)
    let serviceFabricCluster logicalId = ServiceFabricClusterBuilder(logicalId)
    let serviceFabricManagedCluster logicalId = ServiceFabricManagedClusterBuilder(logicalId)
    let servicePlan logicalId = ServicePlanBuilder(logicalId)
    let servicebusNamespace logicalId = ServicebusNamespaceBuilder(logicalId)
    let servicebusNamespaceAuthorizationRule logicalId = ServicebusNamespaceAuthorizationRuleBuilder(logicalId)
    let servicebusNamespaceDisasterRecoveryConfig logicalId = ServicebusNamespaceDisasterRecoveryConfigBuilder(logicalId)
    let servicebusQueue logicalId = ServicebusQueueBuilder(logicalId)
    let servicebusQueueAuthorizationRule logicalId = ServicebusQueueAuthorizationRuleBuilder(logicalId)
    let servicebusSubscription logicalId = ServicebusSubscriptionBuilder(logicalId)
    let servicebusSubscriptionRule logicalId = ServicebusSubscriptionRuleBuilder(logicalId)
    let servicebusTopic logicalId = ServicebusTopicBuilder(logicalId)
    let servicebusTopicAuthorizationRule logicalId = ServicebusTopicAuthorizationRuleBuilder(logicalId)
    let sharedImage logicalId = SharedImageBuilder(logicalId)
    let sharedImageGallery logicalId = SharedImageGalleryBuilder(logicalId)
    let sharedImageVersion logicalId = SharedImageVersionBuilder(logicalId)
    let signalrService logicalId = SignalrServiceBuilder(logicalId)
    let signalrServiceCustomCertificate logicalId = SignalrServiceCustomCertificateBuilder(logicalId)
    let signalrServiceCustomDomain logicalId = SignalrServiceCustomDomainBuilder(logicalId)
    let signalrServiceNetworkAcl logicalId = SignalrServiceNetworkAclBuilder(logicalId)
    let signalrSharedPrivateLinkResource logicalId = SignalrSharedPrivateLinkResourceBuilder(logicalId)
    let siteRecoveryFabric logicalId = SiteRecoveryFabricBuilder(logicalId)
    let siteRecoveryHypervNetworkMapping logicalId = SiteRecoveryHypervNetworkMappingBuilder(logicalId)
    let siteRecoveryHypervReplicationPolicy logicalId = SiteRecoveryHypervReplicationPolicyBuilder(logicalId)
    let siteRecoveryHypervReplicationPolicyAssociation logicalId = SiteRecoveryHypervReplicationPolicyAssociationBuilder(logicalId)
    let siteRecoveryNetworkMapping logicalId = SiteRecoveryNetworkMappingBuilder(logicalId)
    let siteRecoveryProtectionContainer logicalId = SiteRecoveryProtectionContainerBuilder(logicalId)
    let siteRecoveryProtectionContainerMapping logicalId = SiteRecoveryProtectionContainerMappingBuilder(logicalId)
    let siteRecoveryReplicatedVm logicalId = SiteRecoveryReplicatedVmBuilder(logicalId)
    let siteRecoveryReplicationPolicy logicalId = SiteRecoveryReplicationPolicyBuilder(logicalId)
    let siteRecoveryReplicationRecoveryPlan logicalId = SiteRecoveryReplicationRecoveryPlanBuilder(logicalId)
    let siteRecoveryServicesVaultHypervSite logicalId = SiteRecoveryServicesVaultHypervSiteBuilder(logicalId)
    let siteRecoveryVmwareReplicatedVm logicalId = SiteRecoveryVmwareReplicatedVmBuilder(logicalId)
    let siteRecoveryVmwareReplicationPolicy logicalId = SiteRecoveryVmwareReplicationPolicyBuilder(logicalId)
    let siteRecoveryVmwareReplicationPolicyAssociation logicalId = SiteRecoveryVmwareReplicationPolicyAssociationBuilder(logicalId)
    let snapshot logicalId = SnapshotBuilder(logicalId)
    let sourceControlToken logicalId = SourceControlTokenBuilder(logicalId)
    let spatialAnchorsAccount logicalId = SpatialAnchorsAccountBuilder(logicalId)
    let springCloudAccelerator logicalId = SpringCloudAcceleratorBuilder(logicalId)
    let springCloudActiveDeployment logicalId = SpringCloudActiveDeploymentBuilder(logicalId)
    let springCloudApiPortal logicalId = SpringCloudApiPortalBuilder(logicalId)
    let springCloudApiPortalCustomDomain logicalId = SpringCloudApiPortalCustomDomainBuilder(logicalId)
    let springCloudApp logicalId = SpringCloudAppBuilder(logicalId)
    let springCloudAppCosmosdbAssociation logicalId = SpringCloudAppCosmosdbAssociationBuilder(logicalId)
    let springCloudAppDynamicsApplicationPerformanceMonitoring logicalId = SpringCloudAppDynamicsApplicationPerformanceMonitoringBuilder(logicalId)
    let springCloudAppMysqlAssociation logicalId = SpringCloudAppMysqlAssociationBuilder(logicalId)
    let springCloudAppRedisAssociation logicalId = SpringCloudAppRedisAssociationBuilder(logicalId)
    let springCloudApplicationInsightsApplicationPerformanceMonitoring logicalId = SpringCloudApplicationInsightsApplicationPerformanceMonitoringBuilder(logicalId)
    let springCloudApplicationLiveView logicalId = SpringCloudApplicationLiveViewBuilder(logicalId)
    let springCloudBuildDeployment logicalId = SpringCloudBuildDeploymentBuilder(logicalId)
    let springCloudBuildPackBinding logicalId = SpringCloudBuildPackBindingBuilder(logicalId)
    let springCloudBuilder logicalId = SpringCloudBuilderBuilder(logicalId)
    let springCloudCertificate logicalId = SpringCloudCertificateBuilder(logicalId)
    let springCloudConfigurationService logicalId = SpringCloudConfigurationServiceBuilder(logicalId)
    let springCloudConnection logicalId = SpringCloudConnectionBuilder(logicalId)
    let springCloudContainerDeployment logicalId = SpringCloudContainerDeploymentBuilder(logicalId)
    let springCloudCustomDomain logicalId = SpringCloudCustomDomainBuilder(logicalId)
    let springCloudCustomizedAccelerator logicalId = SpringCloudCustomizedAcceleratorBuilder(logicalId)
    let springCloudDevToolPortal logicalId = SpringCloudDevToolPortalBuilder(logicalId)
    let springCloudDynatraceApplicationPerformanceMonitoring logicalId = SpringCloudDynatraceApplicationPerformanceMonitoringBuilder(logicalId)
    let springCloudElasticApplicationPerformanceMonitoring logicalId = SpringCloudElasticApplicationPerformanceMonitoringBuilder(logicalId)
    let springCloudGateway logicalId = SpringCloudGatewayBuilder(logicalId)
    let springCloudGatewayCustomDomain logicalId = SpringCloudGatewayCustomDomainBuilder(logicalId)
    let springCloudGatewayRouteConfig logicalId = SpringCloudGatewayRouteConfigBuilder(logicalId)
    let springCloudJavaDeployment logicalId = SpringCloudJavaDeploymentBuilder(logicalId)
    let springCloudNewRelicApplicationPerformanceMonitoring logicalId = SpringCloudNewRelicApplicationPerformanceMonitoringBuilder(logicalId)
    let springCloudService logicalId = SpringCloudServiceBuilder(logicalId)
    let springCloudStorage logicalId = SpringCloudStorageBuilder(logicalId)
    let sshPublicKey logicalId = SshPublicKeyBuilder(logicalId)
    let stackHciCluster logicalId = StackHciClusterBuilder(logicalId)
    let stackHciLogicalNetwork logicalId = StackHciLogicalNetworkBuilder(logicalId)
    let staticSite logicalId = StaticSiteBuilder(logicalId)
    let staticSiteCustomDomain logicalId = StaticSiteCustomDomainBuilder(logicalId)
    let staticWebApp logicalId = StaticWebAppBuilder(logicalId)
    let staticWebAppCustomDomain logicalId = StaticWebAppCustomDomainBuilder(logicalId)
    let staticWebAppFunctionAppRegistration logicalId = StaticWebAppFunctionAppRegistrationBuilder(logicalId)
    let storageAccount logicalId = StorageAccountBuilder(logicalId)
    let storageAccountCustomerManagedKeyA logicalId = StorageAccountCustomerManagedKeyABuilder(logicalId)
    let storageAccountLocalUser logicalId = StorageAccountLocalUserBuilder(logicalId)
    let storageAccountNetworkRulesA logicalId = StorageAccountNetworkRulesABuilder(logicalId)
    let storageBlob logicalId = StorageBlobBuilder(logicalId)
    let storageBlobInventoryPolicy logicalId = StorageBlobInventoryPolicyBuilder(logicalId)
    let storageContainer logicalId = StorageContainerBuilder(logicalId)
    let storageContainerImmutabilityPolicy logicalId = StorageContainerImmutabilityPolicyBuilder(logicalId)
    let storageDataLakeGen2Filesystem logicalId = StorageDataLakeGen2FilesystemBuilder(logicalId)
    let storageDataLakeGen2Path logicalId = StorageDataLakeGen2PathBuilder(logicalId)
    let storageEncryptionScope logicalId = StorageEncryptionScopeBuilder(logicalId)
    let storageManagementPolicy logicalId = StorageManagementPolicyBuilder(logicalId)
    let storageMover logicalId = StorageMoverBuilder(logicalId)
    let storageMoverAgent logicalId = StorageMoverAgentBuilder(logicalId)
    let storageMoverJobDefinition logicalId = StorageMoverJobDefinitionBuilder(logicalId)
    let storageMoverProject logicalId = StorageMoverProjectBuilder(logicalId)
    let storageMoverSourceEndpoint logicalId = StorageMoverSourceEndpointBuilder(logicalId)
    let storageMoverTargetEndpoint logicalId = StorageMoverTargetEndpointBuilder(logicalId)
    let storageObjectReplication logicalId = StorageObjectReplicationBuilder(logicalId)
    let storageQueue logicalId = StorageQueueBuilder(logicalId)
    let storageShare logicalId = StorageShareBuilder(logicalId)
    let storageShareDirectory logicalId = StorageShareDirectoryBuilder(logicalId)
    let storageShareFile logicalId = StorageShareFileBuilder(logicalId)
    let storageSync logicalId = StorageSyncBuilder(logicalId)
    let storageSyncCloudEndpoint logicalId = StorageSyncCloudEndpointBuilder(logicalId)
    let storageSyncGroup logicalId = StorageSyncGroupBuilder(logicalId)
    let storageSyncServerEndpoint logicalId = StorageSyncServerEndpointBuilder(logicalId)
    let storageTable logicalId = StorageTableBuilder(logicalId)
    let storageTableEntity logicalId = StorageTableEntityBuilder(logicalId)
    let streamAnalyticsCluster logicalId = StreamAnalyticsClusterBuilder(logicalId)
    let streamAnalyticsFunctionJavascriptUda logicalId = StreamAnalyticsFunctionJavascriptUdaBuilder(logicalId)
    let streamAnalyticsFunctionJavascriptUdf logicalId = StreamAnalyticsFunctionJavascriptUdfBuilder(logicalId)
    let streamAnalyticsJob logicalId = StreamAnalyticsJobBuilder(logicalId)
    let streamAnalyticsJobSchedule logicalId = StreamAnalyticsJobScheduleBuilder(logicalId)
    let streamAnalyticsManagedPrivateEndpoint logicalId = StreamAnalyticsManagedPrivateEndpointBuilder(logicalId)
    let streamAnalyticsOutputBlob logicalId = StreamAnalyticsOutputBlobBuilder(logicalId)
    let streamAnalyticsOutputCosmosdb logicalId = StreamAnalyticsOutputCosmosdbBuilder(logicalId)
    let streamAnalyticsOutputEventhub logicalId = StreamAnalyticsOutputEventhubBuilder(logicalId)
    let streamAnalyticsOutputFunction logicalId = StreamAnalyticsOutputFunctionBuilder(logicalId)
    let streamAnalyticsOutputMssql logicalId = StreamAnalyticsOutputMssqlBuilder(logicalId)
    let streamAnalyticsOutputPowerbi logicalId = StreamAnalyticsOutputPowerbiBuilder(logicalId)
    let streamAnalyticsOutputServicebusQueue logicalId = StreamAnalyticsOutputServicebusQueueBuilder(logicalId)
    let streamAnalyticsOutputServicebusTopic logicalId = StreamAnalyticsOutputServicebusTopicBuilder(logicalId)
    let streamAnalyticsOutputSynapse logicalId = StreamAnalyticsOutputSynapseBuilder(logicalId)
    let streamAnalyticsOutputTable logicalId = StreamAnalyticsOutputTableBuilder(logicalId)
    let streamAnalyticsReferenceInputBlob logicalId = StreamAnalyticsReferenceInputBlobBuilder(logicalId)
    let streamAnalyticsReferenceInputMssql logicalId = StreamAnalyticsReferenceInputMssqlBuilder(logicalId)
    let streamAnalyticsStreamInputBlob logicalId = StreamAnalyticsStreamInputBlobBuilder(logicalId)
    let streamAnalyticsStreamInputEventhub logicalId = StreamAnalyticsStreamInputEventhubBuilder(logicalId)
    let streamAnalyticsStreamInputEventhubV2 logicalId = StreamAnalyticsStreamInputEventhubV2Builder(logicalId)
    let streamAnalyticsStreamInputIothub logicalId = StreamAnalyticsStreamInputIothubBuilder(logicalId)
    let subnet logicalId = SubnetBuilder(logicalId)
    let subnetNatGatewayAssociation logicalId = SubnetNatGatewayAssociationBuilder(logicalId)
    let subnetNetworkSecurityGroupAssociation logicalId = SubnetNetworkSecurityGroupAssociationBuilder(logicalId)
    let subnetRouteTableAssociation logicalId = SubnetRouteTableAssociationBuilder(logicalId)
    let subnetServiceEndpointStoragePolicy logicalId = SubnetServiceEndpointStoragePolicyBuilder(logicalId)
    let subscription logicalId = SubscriptionBuilder(logicalId)
    let subscriptionCostManagementExport logicalId = SubscriptionCostManagementExportBuilder(logicalId)
    let subscriptionCostManagementView logicalId = SubscriptionCostManagementViewBuilder(logicalId)
    let subscriptionPolicyAssignment logicalId = SubscriptionPolicyAssignmentBuilder(logicalId)
    let subscriptionPolicyExemption logicalId = SubscriptionPolicyExemptionBuilder(logicalId)
    let subscriptionPolicyRemediation logicalId = SubscriptionPolicyRemediationBuilder(logicalId)
    let subscriptionTemplateDeployment logicalId = SubscriptionTemplateDeploymentBuilder(logicalId)
    let synapseFirewallRule logicalId = SynapseFirewallRuleBuilder(logicalId)
    let synapseIntegrationRuntimeAzure logicalId = SynapseIntegrationRuntimeAzureBuilder(logicalId)
    let synapseIntegrationRuntimeSelfHosted logicalId = SynapseIntegrationRuntimeSelfHostedBuilder(logicalId)
    let synapseLinkedService logicalId = SynapseLinkedServiceBuilder(logicalId)
    let synapseManagedPrivateEndpoint logicalId = SynapseManagedPrivateEndpointBuilder(logicalId)
    let synapsePrivateLinkHub logicalId = SynapsePrivateLinkHubBuilder(logicalId)
    let synapseRoleAssignment logicalId = SynapseRoleAssignmentBuilder(logicalId)
    let synapseSparkPool logicalId = SynapseSparkPoolBuilder(logicalId)
    let synapseSqlPool logicalId = SynapseSqlPoolBuilder(logicalId)
    let synapseSqlPoolExtendedAuditingPolicy logicalId = SynapseSqlPoolExtendedAuditingPolicyBuilder(logicalId)
    let synapseSqlPoolSecurityAlertPolicy logicalId = SynapseSqlPoolSecurityAlertPolicyBuilder(logicalId)
    let synapseSqlPoolVulnerabilityAssessment logicalId = SynapseSqlPoolVulnerabilityAssessmentBuilder(logicalId)
    let synapseSqlPoolVulnerabilityAssessmentBaseline logicalId = SynapseSqlPoolVulnerabilityAssessmentBaselineBuilder(logicalId)
    let synapseSqlPoolWorkloadClassifier logicalId = SynapseSqlPoolWorkloadClassifierBuilder(logicalId)
    let synapseSqlPoolWorkloadGroup logicalId = SynapseSqlPoolWorkloadGroupBuilder(logicalId)
    let synapseWorkspace logicalId = SynapseWorkspaceBuilder(logicalId)
    let synapseWorkspaceAadAdmin logicalId = SynapseWorkspaceAadAdminBuilder(logicalId)
    let synapseWorkspaceExtendedAuditingPolicy logicalId = SynapseWorkspaceExtendedAuditingPolicyBuilder(logicalId)
    let synapseWorkspaceKey logicalId = SynapseWorkspaceKeyBuilder(logicalId)
    let synapseWorkspaceSecurityAlertPolicy logicalId = SynapseWorkspaceSecurityAlertPolicyBuilder(logicalId)
    let synapseWorkspaceSqlAadAdmin logicalId = SynapseWorkspaceSqlAadAdminBuilder(logicalId)
    let synapseWorkspaceVulnerabilityAssessment logicalId = SynapseWorkspaceVulnerabilityAssessmentBuilder(logicalId)
    let systemCenterVirtualMachineManagerAvailabilitySet logicalId = SystemCenterVirtualMachineManagerAvailabilitySetBuilder(logicalId)
    let systemCenterVirtualMachineManagerCloud logicalId = SystemCenterVirtualMachineManagerCloudBuilder(logicalId)
    let systemCenterVirtualMachineManagerServer logicalId = SystemCenterVirtualMachineManagerServerBuilder(logicalId)
    let systemCenterVirtualMachineManagerVirtualMachineTemplate logicalId = SystemCenterVirtualMachineManagerVirtualMachineTemplateBuilder(logicalId)
    let systemCenterVirtualMachineManagerVirtualNetwork logicalId = SystemCenterVirtualMachineManagerVirtualNetworkBuilder(logicalId)
    let tenantTemplateDeployment logicalId = TenantTemplateDeploymentBuilder(logicalId)
    let trafficManagerAzureEndpoint logicalId = TrafficManagerAzureEndpointBuilder(logicalId)
    let trafficManagerExternalEndpoint logicalId = TrafficManagerExternalEndpointBuilder(logicalId)
    let trafficManagerNestedEndpoint logicalId = TrafficManagerNestedEndpointBuilder(logicalId)
    let trafficManagerProfile logicalId = TrafficManagerProfileBuilder(logicalId)
    let userAssignedIdentity logicalId = UserAssignedIdentityBuilder(logicalId)
    let virtualDesktopApplication logicalId = VirtualDesktopApplicationBuilder(logicalId)
    let virtualDesktopApplicationGroup logicalId = VirtualDesktopApplicationGroupBuilder(logicalId)
    let virtualDesktopHostPool logicalId = VirtualDesktopHostPoolBuilder(logicalId)
    let virtualDesktopHostPoolRegistrationInfo logicalId = VirtualDesktopHostPoolRegistrationInfoBuilder(logicalId)
    let virtualDesktopScalingPlan logicalId = VirtualDesktopScalingPlanBuilder(logicalId)
    let virtualDesktopScalingPlanHostPoolAssociation logicalId = VirtualDesktopScalingPlanHostPoolAssociationBuilder(logicalId)
    let virtualDesktopWorkspace logicalId = VirtualDesktopWorkspaceBuilder(logicalId)
    let virtualDesktopWorkspaceApplicationGroupAssociation logicalId = VirtualDesktopWorkspaceApplicationGroupAssociationBuilder(logicalId)
    let virtualHub logicalId = VirtualHubBuilder(logicalId)
    let virtualHubBgpConnection logicalId = VirtualHubBgpConnectionBuilder(logicalId)
    let virtualHubConnection logicalId = VirtualHubConnectionBuilder(logicalId)
    let virtualHubIp logicalId = VirtualHubIpBuilder(logicalId)
    let virtualHubRouteTable logicalId = VirtualHubRouteTableBuilder(logicalId)
    let virtualHubRouteTableRouteA logicalId = VirtualHubRouteTableRouteABuilder(logicalId)
    let virtualHubRoutingIntent logicalId = VirtualHubRoutingIntentBuilder(logicalId)
    let virtualHubSecurityPartnerProvider logicalId = VirtualHubSecurityPartnerProviderBuilder(logicalId)
    let virtualMachine logicalId = VirtualMachineBuilder(logicalId)
    let virtualMachineAutomanageConfigurationAssignment logicalId = VirtualMachineAutomanageConfigurationAssignmentBuilder(logicalId)
    let virtualMachineDataDiskAttachment logicalId = VirtualMachineDataDiskAttachmentBuilder(logicalId)
    let virtualMachineExtension logicalId = VirtualMachineExtensionBuilder(logicalId)
    let virtualMachineGalleryApplicationAssignment logicalId = VirtualMachineGalleryApplicationAssignmentBuilder(logicalId)
    let virtualMachineImplicitDataDiskFromSource logicalId = VirtualMachineImplicitDataDiskFromSourceBuilder(logicalId)
    let virtualMachinePacketCapture logicalId = VirtualMachinePacketCaptureBuilder(logicalId)
    let virtualMachineRestorePoint logicalId = VirtualMachineRestorePointBuilder(logicalId)
    let virtualMachineRestorePointCollection logicalId = VirtualMachineRestorePointCollectionBuilder(logicalId)
    let virtualMachineRunCommand logicalId = VirtualMachineRunCommandBuilder(logicalId)
    let virtualMachineScaleSet logicalId = VirtualMachineScaleSetBuilder(logicalId)
    let virtualMachineScaleSetExtensionA logicalId = VirtualMachineScaleSetExtensionABuilder(logicalId)
    let virtualMachineScaleSetPacketCapture logicalId = VirtualMachineScaleSetPacketCaptureBuilder(logicalId)
    let virtualNetwork logicalId = VirtualNetworkBuilder(logicalId)
    let virtualNetworkDnsServers logicalId = VirtualNetworkDnsServersBuilder(logicalId)
    let virtualNetworkGateway logicalId = VirtualNetworkGatewayBuilder(logicalId)
    let virtualNetworkGatewayConnection logicalId = VirtualNetworkGatewayConnectionBuilder(logicalId)
    let virtualNetworkGatewayNatRule logicalId = VirtualNetworkGatewayNatRuleBuilder(logicalId)
    let virtualNetworkPeering logicalId = VirtualNetworkPeeringBuilder(logicalId)
    let virtualWan logicalId = VirtualWanBuilder(logicalId)
    let vmwareCluster logicalId = VmwareClusterBuilder(logicalId)
    let vmwareExpressRouteAuthorization logicalId = VmwareExpressRouteAuthorizationBuilder(logicalId)
    let vmwareNetappVolumeAttachment logicalId = VmwareNetappVolumeAttachmentBuilder(logicalId)
    let vmwarePrivateCloud logicalId = VmwarePrivateCloudBuilder(logicalId)
    let voiceServicesCommunicationsGateway logicalId = VoiceServicesCommunicationsGatewayBuilder(logicalId)
    let voiceServicesCommunicationsGatewayTestLine logicalId = VoiceServicesCommunicationsGatewayTestLineBuilder(logicalId)
    let vpnGateway logicalId = VpnGatewayBuilder(logicalId)
    let vpnGatewayConnection logicalId = VpnGatewayConnectionBuilder(logicalId)
    let vpnGatewayNatRule logicalId = VpnGatewayNatRuleBuilder(logicalId)
    let vpnServerConfiguration logicalId = VpnServerConfigurationBuilder(logicalId)
    let vpnServerConfigurationPolicyGroup logicalId = VpnServerConfigurationPolicyGroupBuilder(logicalId)
    let vpnSite logicalId = VpnSiteBuilder(logicalId)
    let webAppActiveSlot logicalId = WebAppActiveSlotBuilder(logicalId)
    let webAppHybridConnection logicalId = WebAppHybridConnectionBuilder(logicalId)
    let webApplicationFirewallPolicy logicalId = WebApplicationFirewallPolicyBuilder(logicalId)
    let webPubsub logicalId = WebPubsubBuilder(logicalId)
    let webPubsubCustomCertificate logicalId = WebPubsubCustomCertificateBuilder(logicalId)
    let webPubsubCustomDomain logicalId = WebPubsubCustomDomainBuilder(logicalId)
    let webPubsubHub logicalId = WebPubsubHubBuilder(logicalId)
    let webPubsubNetworkAcl logicalId = WebPubsubNetworkAclBuilder(logicalId)
    let webPubsubSharedPrivateLinkResource logicalId = WebPubsubSharedPrivateLinkResourceBuilder(logicalId)
    let windowsFunctionApp logicalId = WindowsFunctionAppBuilder(logicalId)
    let windowsFunctionAppSlot logicalId = WindowsFunctionAppSlotBuilder(logicalId)
    let windowsVirtualMachine logicalId = WindowsVirtualMachineBuilder(logicalId)
    let windowsVirtualMachineScaleSet logicalId = WindowsVirtualMachineScaleSetBuilder(logicalId)
    let windowsWebApp logicalId = WindowsWebAppBuilder(logicalId)
    let windowsWebAppSlot logicalId = WindowsWebAppSlotBuilder(logicalId)
    let workloadsSapDiscoveryVirtualInstance logicalId = WorkloadsSapDiscoveryVirtualInstanceBuilder(logicalId)
    let workloadsSapSingleNodeVirtualInstance logicalId = WorkloadsSapSingleNodeVirtualInstanceBuilder(logicalId)
    let workloadsSapThreeTierVirtualInstance logicalId = WorkloadsSapThreeTierVirtualInstanceBuilder(logicalId)
